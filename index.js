(()=>{"use strict";var n={d:(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t),r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}},t={};n.r(t),n.d(t,{createPlayoffs:()=>z});const e=(n,t=300)=>{let e;return(...i)=>{clearTimeout(e),e=setTimeout((()=>{n.apply(void 0,i)}),t)}},i=n=>"object"==typeof n&&!Array.isArray(n)&&null!==n,o=n=>{const t=document.createElement("div");return t.innerHTML=n.trim(),t.firstElementChild},a=(n,t,e)=>{const i=document.head.querySelector(`#${n}-${t}`);i&&document.head.removeChild(i),((n,t,e)=>{document.head.insertAdjacentHTML("beforeend",`<style id='${n}-${t}'>${e}</style>`)})(n,t,e)},r=n=>{if(null===n||"object"!=typeof n)return n;let t=new n.constructor;for(let e in n)n.hasOwnProperty(e)&&(t[e]=r(n[e]));return t};let s=!1;const l=(n,t)=>{s||(s=!0,console.error(`Incorrect data. %c ${n} %c${t?JSON.stringify(t,null,2):""}`,"color: #9d7575","font-size: 10px; color: #9d7575"))},d=(n,t)=>{throw l(n,t),""},c=(n,t)=>{Array.isArray(n)||d("Data.matches must be an array, instead got: ",n),n.forEach((n=>{i(n)||d("Expected a match object, instead got: ",n),void 0===n.match_id&&d("Match must contain .match_id property: ",n),void 0===n.round_id&&d("Match must contain .round_id property: ",n),void 0===n.order&&d("Match must contain .order property: ",n),"number"!=typeof n.order&&d("Match.order property is required, and it must be a number: ",n),Array.isArray(n.sides)||d("Match.sides is required and must be an array: ",n),n.sides.forEach((e=>{!i(e)&&d("Match's side must be an object: ",n),"string"!=typeof e.contestant_id&&d("Side.contestant_id must be provided: ",e),Object.keys(t).includes(e.contestant_id)||l("No contestant data found for this side.contestant_id: ",e),void 0!==e.is_winner&&"boolean"!=typeof e.is_winner&&d("If you provide side.is_winner, it must be a boolean: ",e),void 0!==e.score&&Array.isArray(e.score)||d("Side.score is required and it must be an array (at least empty): ",e),e.score.forEach((n=>{i(n)||d("Score must be an object: ",e),void 0===n.main_score&&d('If you provide a side.score, it must contain a "main_score" property',e),"number"!=typeof n.main_score&&"string"!=typeof n.main_score&&d("Side.score.main_score must be a number or a string: ",e),"number"!=typeof n.tie_break&&void 0!==n.tie_break&&d("If you provide side.score.tie_break, it must be a number: ",e),"boolean"!=typeof n.is_winner&&void 0!==n.is_winner&&d("If you provide side.score.is_winner, it must be a boolean: ",e)})),void 0!==e.subscore&&"number"!=typeof e.subscore&&"string"!=typeof e.subscore&&d("If side.subscore is provided, it must be a number or a string: ",e),void 0!==e.is_serving&&"boolean"!=typeof e.is_serving&&d("If side.is_serving is provided, it must be a boolean: ",e)}))}))},h=(n,t)=>t===n-1?"Final":t===n-2?"Semifinals":t===n-3?"Quarterfinals":`1/${Math.pow(2,n-t-1)}`,p=n=>{const t=document.querySelector(`#${n}`);if(!t)return null;const e=n=>t.querySelector(n);return{the_root_element:t,scrollbar:e(".scrollbar"),content_area:e(".content-area"),round_titles_wrapper:e(".round-titles-wrapper"),matches_vertical_scroller:e(".matches-vertical-scroller"),matches_positioner:e(".matches-positioner")}},u="#bbbbbb",g={overMatches:"left and right (on top of matches)",gutters:"left and right (in the gutters)",beforeTitles:"header (before round titles)",overTitles:"header (on top of round titles)",hidden:"hidden"},m=({scrollbar:n,matches_vertical_scroller:t})=>{if("none"===getComputedStyle(n).display)return;n.style.top=t.scrollTop/t.scrollHeight*100+"%",n.style.height=t.clientHeight/t.scrollHeight*100+"%";const e=t.scrollHeight>t.clientHeight;n.style.visibility=e?"visible":"hidden"},v=(n,t)=>{[...n.querySelectorAll(".match-wrapper")].forEach((n=>{n.classList.remove("highlighted","last-highlighted"),[...n.querySelectorAll(".side-wrapper")].forEach((e=>{e.classList.remove("highlighted"),null!==t&&e.getAttribute("contestant-id")===t&&(e.classList.add("highlighted"),n.classList.add("highlighted"))}))})),[...n.querySelectorAll(".match-wrapper.highlighted")].reverse()[0]?.classList.add("last-highlighted")},f=(n,t,i,o)=>{let a=null,r=null,s=!1;const{the_root_element:l,content_area:d,matches_vertical_scroller:c,scrollbar:h,matches_positioner:p}=i;l.addEventListener("mouseup",(e=>{if(!s&&0===e.button)if(e.target.classList.contains("navigation-button"))o.handle_click(e);else if(null===t("onMatchClick")){if(null===t("onMatchSideClick"))e.target.classList.contains("side-wrapper")?v(p,e.target.closest(".side-wrapper").getAttribute("contestant-id")):v(p,null);else if(e.target.classList.contains("side-wrapper")){const i=e.target.closest(".match-wrapper")?.getAttribute("match-id"),o=n.matches.find((n=>n.match_id===i)),a=e.target.getAttribute("contestant-id"),r=n.contestants[a];t("onMatchSideClick")(r,a,o)}}else if(e.target.classList.contains("match-body")){const i=e.target.closest(".match-wrapper")?.getAttribute("match-id");t("onMatchClick")(n.matches.find((n=>n.match_id===i)))}})),h.addEventListener("mousedown",(n=>{0===n.button&&(s=!0,a=n.clientY,r=c.scrollTop,h.classList.add("dragged"))})),window.addEventListener("mouseup",(n=>{s=!1,a=null,r=null,h.classList.remove("dragged")})),window.addEventListener("mousemove",((n,t)=>{let e=!1;return(...t)=>{e||(n.apply(void 0,t),e=!0,setTimeout((()=>{e=!1}),15))}})((n=>{if(s){const t=(n.clientY-a)/d.clientHeight;c.scrollTop=r+t*c.scrollHeight}})));const u=e((()=>{c.style.overflowY="scroll"}),200);window.addEventListener("scroll",(()=>{c.style.overflowY="hidden",u()})),c.addEventListener("scroll",(()=>m(i)))},b={GENERAL_OPTIONS:{mainBorderColor:{title:"Main border color",type:"string",default_value:u},rootBackgroundColor:{title:"Root background color",type:"string",default_value:"#ffffff"},mainVerticalPadding:{title:"Main vertical padding (before first match and after last match)",type:"pixels",default_value:20,min_value:0},visibleRoundsCount:{title:"How many rounds to display (0 for 'auto', i.e. as much as possible)",type:"number",default_value:0},showScrollbar:{title:"Should show scrollbar",type:"boolean",default_value:!0},scrollbarWidth:{title:"Scrollbar width",type:"pixels",default_value:"5"},scrollbarColor:{title:"Scrollbar color",type:"string",default_value:"#d3d3d3"}},ROUND_TITLE_OPTIONS:{roundTitlesHeight:{title:"Round titles height",type:"pixels",default_value:"50"},roundTitlesBorderBottomColor:{title:"Round titles bottom border-color",type:"string",default_value:u},roundTitleColor:{title:"Round title color",type:"string",default_value:"#000"}},NAVIGATION_OPTIONS:{navButtonsPosition:{title:"Navigation (switch rounds) buttons position",type:"select",options:[...Object.keys(g)],default_value:"gutters",explanation:Object.entries(g).map((([n,t])=>`<span style="text-decoration: underline;">${n}</span>: ${t}`)).join("<br />")},navigationButtonsTopDistance:{title:"Navigation buttons distance from content top, in any units",type:"string",default_value:"50%",disable_if:n=>"overMatches"!==n.navButtonsPosition,explanation:"navigationButtonsTopDistance option takes effect only when navButtonsPosition is set to 'overMatches'"},navigationGutterBorderColor:{title:"Navigation gutter border color",type:"string",default_value:u,disable_if:n=>"gutters"!==n.navButtonsPosition&&"overTitles"!==n.navButtonsPosition&&"beforeTitles"!==n.navButtonsPosition,explanation:"navigationGutterBorderColor options is applied only when navButtonsPosition is 'gutters' or 'overTitles' or 'beforeTitles'"},defaultNavigationSvgSize:{title:"Default navigation arrow size",type:"pixels",default_value:"50"},navigationSvgColor:{title:"Navigation buttons svg color",type:"string",default_value:"#161616"},leftNavigationButtonBackground:{title:"Left navigation button background",type:"string",default_value:"transparent",explanation:"leftNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'"},rightNavigationButtonBackground:{title:"Right navigation button background",type:"string",default_value:"transparent",explanation:"rightNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'"},leftNavigationButtonHTML:{title:"Inner HTML of LEFT navigation button (<svg> / <img> / whatever)",type:"multiline_string",default_value:'\n            <svg class="default-navigation-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z"/></svg>\n        '},rightNavigationButtonHTML:{title:"Inner HTML of RIGHT navigation button (<svg> / <img> / whatever)",type:"multiline_string",default_value:'\n            <svg class="default-navigation-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z"/></svg>\n        '}},FONTS_OPTIONS:{rootFontFamily:{title:'Root font-family (applied to blocks with an "inherit" font-family)',type:"string",default_value:"Open Sans, Roboto, sans-serif"},roundTitlesFontFamily:{title:"Round titles font-family",type:"string",default_value:"inherit"},roundTitlesFontSize:{title:"Round titles font-size",type:"pixels",default_value:30,min_value:8},matchTextColor:{title:"Match text color",type:"string",default_value:"#000"},matchFontSize:{title:"Match font-size",type:"pixels",default_value:16,min_value:8},playerTitleFontFamily:{title:"Player title font family",type:"string",default_value:"inherit"},highlightedPlayerTitleColor:{title:"Highlighted player title color",type:"string",default_value:"#003ae6",explanation:"This color is applied to a players' titles when\n            <br />\n            1) contestant is under cursor\n            <br />\n            2) contestant's match history is highlighted"},scoreFontFamily:{title:'Score font-family (provide "inherit" to use rootFontFamily option)',type:"string",default_value:"inherit"}},CONNECTION_LINES_OPTIONS:{connectionLinesWidth:{title:"Connection lines width",type:"pixels",default_value:2,min_value:0},connectionLinesColor:{title:"Connection lines color",type:"string",default_value:"#dcdcdc"},highlightedConnectionLinesColor:{title:"Highlighted connection lines color",type:"string",default_value:"#7698ff"}},MATCH_OPTIONS:{matchMaxWidth:{title:"Max match width",type:"pixels",default_value:450,explanation:"Specifying smaller width here will help easy-playoffs draw a greater number of rounds within a given width"},matchMinVerticalGap:{title:"Minimal vertical distance between matches",type:"pixels",default_value:25,explanation:"Minimal distance means a distance between matches of the leftmost visible round when the visible height isn't enough to contain all matches of this round"},matchHorMargin:{title:"Matches' horizontal margins (units must be specified)",type:"string",default_value:"6%",explanation:'Note that in "mobile" (1-round) layout this option will take no effect. Instead a margin of 1.5% will be used'},matchAxisMargin:{title:"Vertical distance between match axis and each side of a match",type:"pixels",default_value:4},oneSidePlayersGap:{title:"Vertical distance between players of one side of a match (e.g. of tennis doubles)",type:"pixels",default_value:2},liveMatchBorderColor:{title:"Live match border color",type:"string",default_value:"#44c985"},liveMatchBackgroundColor:{title:"Live match background color",type:"string",default_value:"transparent"},distanceBetweenScorePairs:{title:"Distance between scores (e.g. between sets in tennis)",type:"pixels",default_value:14,min_value:0}},CALLBACKS:{onMatchClick:{title:"What happens when a user clicks on a match (JS function)",type:"function_or_null",default_value:null,explanation:"\n            Your function will be called with a data of a match that was clicked.\n            <br /><br />\n            Example:\n            <div class=\"code\">{\n    onMatchClick: (match) => {\n        location.href = `/matches/${match.match_id}`\n    }\n}\n</div>\n<br />\nIf you provide this function, contestant's match history will not be highlighted when you click a match's side"},onMatchSideClick:{title:"What happens when a user clicks on a side of a match (JS function)",type:"function_or_null",default_value:null,explanation:"\n            Your function will be called with\n            <br />\n            1) data of a contestant which was clicked,\n            <br />\n            2) this contestant's id,\n            <br />\n            3) data of a match within which a side was clicked\n            <br />\n            <br />\n            Example:\n            <div class=\"code\">{\n    onMatchSideClick: (contestant, contestant_id, match) => {\n        location.href = `/teams/${contestant_id}`\n    }\n}\n</div>\n            <br />\n            <br />\n            If you provide this function, it will discard the default behaviour: contestant's match history will not be highlighted when you click a match's side"}}},y=()=>{const n={};return Object.values(b).forEach((t=>Object.assign(n,t))),n};let w=!1;const _=(n,t)=>{requestAnimationFrame((()=>{w||(w=!0,console.warn(`Impossible value %c${JSON.stringify(t,null,2)}%c provided for ${n} option. Default value of %c${(()=>{const n={};return Object.entries(y()).forEach((([t,{default_value:e}])=>{n[t]=e})),n})()[n]}%c will be used instead`,"background: pink","","background: #c7ffc9",""))}))},$=(n,t)=>{const e=p(n);let i=0,o=e.matches_positioner.firstElementChild.clientWidth;const a=()=>((n,t,e,i)=>{const o=[...t.matches_positioner.querySelectorAll(".round-wrapper")],a=[...t.round_titles_wrapper.children],r=i("visibleRoundsCount")||Math.max(1,Math.floor(t.content_area.clientWidth/(.9*n)));let s=0;s=(t.matches_vertical_scroller.scrollTop+t.matches_vertical_scroller.clientHeight/2)/t.matches_vertical_scroller.scrollHeight,o.forEach(((n,t)=>{const i=t>=e&&t<=e+r-1;n.classList[i?"remove":"add"]("hidden"),a[t].classList[i?"remove":"add"]("hidden")})),t.the_root_element.classList[1===r?"add":"remove"]("mobile");const l=t.matches_vertical_scroller.scrollHeight*s;var d,c;t.matches_vertical_scroller.scrollTop=(d=l-t.matches_vertical_scroller.clientHeight/2,c=t.matches_vertical_scroller.scrollHeight-t.matches_vertical_scroller.clientHeight,Math.max(Math.min(d,c),0)),((n,t)=>{let e=t>0,i=n.matches_positioner.lastChild.classList.contains("hidden");n.the_root_element.querySelectorAll(".navigation-button.left").forEach((n=>n.classList[e?"add":"remove"]("active"))),n.the_root_element.querySelectorAll(".navigation-button.right").forEach((n=>n.classList[i?"add":"remove"]("active")))})(t,e),m(t)})(o,e,i,t),r=()=>{const n=e.the_root_element.classList.contains("mobile");e.the_root_element.classList.remove("mobile"),e.the_root_element.classList.add("free-layout"),o=e.matches_positioner.firstElementChild.clientWidth,e.the_root_element.classList.remove("free-layout"),n&&e.the_root_element.classList.add("mobile"),a()};r();const s=()=>{i=Math.max(0,i-1),a()},l=()=>{e.matches_positioner.lastChild.classList.contains("hidden")&&(i+=1,a())};return{move_left:s,move_right:l,set_base_round_index:n=>{i=n,a()},apply_options:r,repaint:a,handle_click:n=>{n.target.classList.contains("active")&&(n.target.classList.contains("left")&&s(),n.target.classList.contains("right")&&l())},get_state:()=>({reachedRightEdge:!stable_elements.matches_positioner.lastChild?.classList.contains("hidden"),allRoundsAreVisible:null===stable_elements.matches_positioner.querySelector(".round-wrapper.hidden"),baseRoundIndex:i})}},x=[];function k(){x.includes(this.src)||x.push(this.src),this.removeEventListener("error",k),this.removeEventListener("load",S),this.remove()}function S(){this.removeEventListener("error",k),this.removeEventListener("load",S)}const L=(n,t,e)=>{let i="",o=e.contestants[n.contestant_id];return o?(e.have_entry_statuses&&(i+=`<div class="side-info-item entry-status">${o.entry_status||""}</div>`),i+=`<div class="side-info-item players-info">\n        ${o.players.map((n=>((n,t)=>`<div class="player-wrapper">\n    ${((n,t)=>{if(!t.have_nationalities)return"";let e="";return n.nationality_code&&(e=n.nationality_code),n.flag_url&&![...x].includes(n.flag_url)&&(e=`<img class="player-flag" src="${n.flag_url}" loading=lazy />`),`<div class="nationality">${e}</div>`})(n,t)}\n    <div class="player-title">${n.title}</div>\n</div>`)(n,e))).join("")}\n    </div>`,n.is_winner&&(i+='<div class="side-info-item winner-mark">\n            <svg class="default-winner-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path xmlns="http://www.w3.org/2000/svg" d="M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z"/></svg>\n        </div>'),i+=`<div class="side-info-item score">\n        ${n.score.map(((e,i)=>{let o=e.is_winner;return void 0===o&&(o=!!n.is_winner),`<div class="single-score ${o?"winner":""}">\n                <div class="side-own-score">\n                    <span class="main-score">${e.main_score}</span>\n                    ${"number"==typeof e.tie_break?`<span class="tie-break">${e.tie_break}</span>`:""}\n                </div>\n                <span class="other-side-score"> \x3c!-- this block is for horizontal alignment between two sides' scores --\x3e\n                    <span class="main-score">${t?.score[i].main_score}</span>\n                    ${"number"==typeof t?.score[i].tie_break?`<span class="tie-break">${t?.score[i].tie_break}</span>`:""}\n                </span>\n            </div>`})).join("")}\n    </div>`,n.subscore&&(i+=`<div class="side-info-item subscore">${n.subscore}</div>`),t?.is_serving?i+='<div class="side-info-item serving-mark transparent"></div>':n.is_serving&&(i+='<div class="side-info-item serving-mark"></div>'),i):""},M=(n,t,e)=>`<div class="side-wrapper\n            ${void 0===n||void 0===e.contestants[n?.contestant_id]?"empty-side":""}\n            ${t?.is_winner?"looser":""}\n            ${n?.is_winner?"winner":""}\n        "\n        ${n?` contestant-id="${n.contestant_id}"`:""}\n    >\n        ${n?L(n,t,e):""}\n    </div>`,T=(n,t)=>{if(void 0===n)return`<div class="match-wrapper missing-match-placeholder">\n            ${M(null,null,t)}\n            ${M(null,null,t)}\n            <div class="match-lines-area">\n                <div class="line-wrapper upper"></div>\n                <div class="line-wrapper lower"></div>\n            </div>\n        </div>`;let e="";return!n.sides.find((n=>n.score.length))&&n.match_status&&(e=`<div class="match-status">${n.match_status}</div>`),`<div class="match-wrapper ${n.is_live?"live":""}" match-id="${n.match_id}">\n        <div class="match-body">\n            <div class="sides">\n                ${M(n.sides[0],n.sides[1],t)}\n                ${M(n.sides[1],n.sides[0],t)}\n            </div>\n            ${e}\n        </div>\n        <div class="match-lines-area">\n            <div class="line-wrapper upper"></div>\n            <div class="line-wrapper lower"></div>\n        </div>\n    </div>`},C=(n,t)=>{const e=[];n.rounds.forEach(((t,i)=>{e.push(((n,t,e)=>{const i=Math.pow(2,n.rounds.length-1-e),a=o(`\n        <div class="round-wrapper" round-id="${t}">\n            ${(r=i,s=(e,i)=>T(n.matches.find((n=>n.round_id===t&&n.order===i)),n),Array.from(Array(r)).map(s)).join("")}\n            \n            ${0===e?'<div class="round-fake-padding left"></div>':""}\n            ${e===n.rounds.length-1?'<div class="round-fake-padding right"></div>':""}\n\n        </div>\n    `);var r,s;return(n=>{n.querySelectorAll("img.player-flag").forEach((n=>{n.addEventListener("error",k),n.addEventListener("load",S)}))})(a),a})(n,t.id,i))})),t.matches_positioner.append(...e)},B=(n,t,e,i)=>{var o,r;(n=>{const t=y();Object.entries(n).forEach((([n,e])=>{t[n]||console.warn(`Unknown option provided: %c${n}`,"background: pink; font-weight: bold")}))})(n),t.update_user_options(n),i.the_root_element.querySelectorAll(".navigation-button.left").forEach((n=>n.innerHTML=t.get_final_value("leftNavigationButtonHTML"))),i.the_root_element.querySelectorAll(".navigation-button.right").forEach((n=>n.innerHTML=t.get_final_value("rightNavigationButtonHTML"))),i.scrollbar.style.display=t.get_final_value("showScrollbar")?"block":"none",o=e.root_id,r=t.get_final_value,a(o,"general-styles",((n,t)=>`\n\n    #${n}.root-brackets-element {\n        background-color: ${t("rootBackgroundColor")};\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        min-width: 300px;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        border: 1px solid ${t("mainBorderColor")};\n    }\n    \n    #${n} .all-but-buttons-header {\n        flex: 1;\n        display: flex;\n        height: 100%;\n    }\n\n    /* protection against external styles */\n    #${n}, #${n} * {\n        box-sizing: border-box;\n        user-select: none;\n        margin: 0;\n        padding: 0;\n        width: auto;\n        height: auto;\n        border: none;\n        border-radius: 0;\n        align-content: unset;\n        align-items: unset;\n        align-self: unset;\n        bottom: unset;\n        top: unset;\n        left: unset;\n        right: unset;\n        box-shadow: none;\n        outline: none;\n        text-decoration: none;\n        white-space: initial;\n        line-height: initial;\n    }\n\n    #${n} .zero-width {\n        width: 0;\n    }\n\n    #${n} .with-hidden-scrollbar {\n        scrollbar-width: none; /* For Firefox */\n        -ms-overflow-style: none; /* For Internet Explorer and Edge */\n    }\n\n    #${n} .with-hidden-scrollbar::-webkit-scrollbar {\n        width: 0px; /* For Chrome, Safari, and Opera */\n    }\n\n    #${n} .full-width-grid-column { /* (a column that takes full width of the parent grid el) */\n        grid-column: 1 / -1;\n    }\n\n    #${n} .equal-width-columns-grid { /* all columns acquire the width of the widest column */\n        display: grid;\n        grid-auto-flow: column;\n        grid-auto-columns: minmax(0, 1fr);\n    }\n\n    \n    \n    #${n} .round-titles-wrapper {\n        width: 100%;\n        display: grid;\n        height: ${t("roundTitlesHeight")}px;\n        font-size: ${t("roundTitlesFontSize")}px;\n        font-family: ${t("roundTitlesFontFamily")||t("rootFontFamily")};\n        color: ${t("roundTitleColor")};\n        border-bottom: 1px solid ${t("roundTitlesBorderBottomColor")};\n        padding-right: 1000px; /* otherwise the border-bottom stopped too early */\n        box-sizing: content-box;\n    }\n\n    #${n} .round-title {\n        display: flex;\n        align-items: center;\n        white-space: nowrap;\n        overflow: hidden;\n        justify-content: center;\n    }\n    #${n} .round-title.hidden {\n        display: none;\n    }\n\n    #${n} .matches-vertical-scroller {\n        flex: 1;\n        position: relative;\n        overflow-y: scroll;\n        overflow-x: hidden;\n    }\n\n    #${n} .matches-positioner {\n        position: relative;\n        display: grid;\n        grid-template-rows: 100%;\n        overflow: hidden;\n        min-height: calc(100% - ${2*t("mainVerticalPadding")}px);\n        margin-top: ${t("mainVerticalPadding")||0}px;\n        margin-bottom: ${t("mainVerticalPadding")||0}px;\n        font-size: ${t("matchFontSize")}px;\n        width: 100%;\n    }\n\n    #${n} .content-area {\n        height: 100%;\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        min-width: 0; /* to make it shrink to the free width of the parent */\n        overflow: hidden;\n        position: relative;\n    }\n\n    #${n} .scrollbar {\n        position: absolute;\n        z-index: 2;\n        right: 0;\n        width: ${t("scrollbarWidth")}px;\n        background: ${t("scrollbarColor")};\n        opacity: 0.7;\n    }\n    #${n} .scrollbar:hover, #${n} .scrollbar.dragged {\n        opacity: 1;\n    }\n\n\n\n\n\n\n\n/*  layout to measure rounds' natural width (where they aren't constrained by 100% and flex and grid stuff) */\n    #${n}.root-brackets-element.free-layout .round-wrapper.hidden {\n        display: grid; /* (instead of 'none') */\n    }    \n    #${n}.root-brackets-element.free-layout .matches-positioner {\n        width: max-content;\n    }\n`)(o,r)),a(o,"buttons-styles",((n,t)=>{const e="gutters"===t("navButtonsPosition"),i="beforeTitles"===t("navButtonsPosition"),o="overTitles"===t("navButtonsPosition"),a="hidden"===t("navButtonsPosition");return`\n\n\n        #${n} .buttons-header {\n            display: ${i||o?"flex":"none"};\n            align-items: center;\n            justify-content: space-between;\n            border-bottom: 1px solid ${t("navigationGutterBorderColor")};\n            ${o?`\n                    position: absolute;\n                    z-index: 1;\n                    left: 0;\n                    right: 0;\n                    height: ${parseInt(t("roundTitlesHeight"))+1}px;\n                `:""}\n        }\n\n        #${n} .buttons-header .navigation-button {\n            display: flex;\n            align-items: center;\n        }\n\n        #${n} .navigation-button {\n            max-height: 100%;\n        }\n\n        #${n} .navigation-button.non-header-button {\n            cursor: auto;\n            user-select: none;\n            z-index: 2;\n            display: ${a||i||o?"none":"flex"};\n            position: ${e?"static":"absolute"};\n            top: ${t("navigationButtonsTopDistance")};\n            transform: ${e?"none":"translate(0, -50%)"};\n            min-height: ${e?"100%":"0"}px;\n        }\n\n\n        #${n} .navigation-button.non-header-button {\n            justify-content: center;\n            align-items: center;\n        }\n        #${n} .navigation-button.non-header-button.left {\n            left: 0;\n            background: ${t("leftNavigationButtonBackground")};\n            border-right: ${e?`1px solid ${t("navigationGutterBorderColor")}`:"none"};\n        }\n        #${n} .navigation-button.non-header-button.right {\n            right: 0;\n            background: ${t("rightNavigationButtonBackground")};\n            border-left: ${e?`1px solid ${t("navigationGutterBorderColor")}`:"none"};\n        }\n        #${n} .navigation-button svg {\n            fill: ${t("navigationSvgColor")};\n        }\n           \n        #${n} .navigation-button.hidden {\n            visibility: hidden;\n        }\n\n        #${n} .navigation-button.active {\n            cursor: pointer;\n        }\n\n        #${n} .navigation-button > * {\n            transition: opacity ease-in-out 0.2s;\n            opacity: 0.15;\n            pointer-events: none;\n        }\n\n        #${n} .navigation-button.active > * {\n            opacity: 0.65;\n        }\n\n        #${n} .navigation-button.active:hover > * {\n            opacity: 1;\n        }\n\n        #${n} .default-navigation-svg {\n            height: auto;\n            padding: ${t("defaultNavigationSvgSize")/6}px ${t("defaultNavigationSvgSize")/8}px;\n            width: ${t("defaultNavigationSvgSize")}px;\n        }\n    `})(o,r)),a(o,"rounds-styles",((n,t)=>`\n    #${n} {\n        font-family: ${t("rootFontFamily")};\n    }\n\n    #${n} .round-wrapper {\n        position: relative;\n        display: grid;\n        grid-auto-rows: minmax(0, 1fr);\n        align-items: stretch;\n        min-width: 100px;\n        max-width: 100%;\n    }\n\n    #${n} .round-wrapper.hidden {\n        display: none;\n    }\n\n\n\n\n    #${n} .round-fake-padding {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        bottom: 0;\n        width: ${t("matchHorMargin")};\n        background: ${t("rootBackgroundColor")};\n    }\n    #${n} .round-fake-padding.left {\n        left: 0;\n    }\n    #${n} .round-fake-padding.right {\n        right: 0;\n    }\n\n\n\n\n\n    #${n} .match-wrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        position: relative;\n        min-height: 40px;\n        padding-top: ${t("matchMinVerticalGap")/2}px;\n        padding-bottom: ${t("matchMinVerticalGap")/2}px;\n        padding-left: ${t("matchHorMargin")};\n        padding-right: ${t("matchHorMargin")};\n        box-sizing: border-box;\n    }\n    \n\n\n    #${n} .round-wrapper .match-body {\n        width: 100%;\n        transition: background-color 0.1s ease-out;\n        display: flex;\n        max-width: ${t("matchMaxWidth")}px;\n    }\n\n    #${n} .match-body .sides {\n        flex: 1;\n        display: grid;\n        grid-template-rows: minmax(0, 1fr) minmax(0, 1fr); /* two sides will always be of same height */\n        grid-template-columns: minmax(0, 1fr);\n        border: ${t("connectionLinesWidth")}px solid transparent;\n    }\n\n    #${n} .match-body .match-status {\n        font-size: ${Math.floor(.85*t("matchFontSize"))}px;\n        background: ${t("rootBackgroundColor")};\n        z-index: 2;\n        border: ${t("connectionLinesWidth")}px solid ${t("connectionLinesColor")};\n        padding: 2px 6px;\n        align-self: center;\n        margin-right: 2%;\n    }\n\n    #${n} .match-wrapper.highlighted .match-body .match-status {\n        border-color: ${t("highlightedConnectionLinesColor")};\n    }\n\n    ${t("onMatchClick")?`\n            #${n} .match-body {\n                cursor: pointer;\n            }\n            #${n} .match-body * {\n                pointer-events: none; /* handle click/hover only on whole body */\n            }\n            #${n} .match-body:hover {\n                background-color: rgb(250, 250, 250);\n            }\n            #${n} .match-body:hover .player-title {\n                color: ${t("highlightedPlayerTitleColor")};\n            }\n        `:""}\n\n\n\n\n    #${n} .match-wrapper.missing-match-placeholder {\n        pointer-events: none;\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n/* LINES */\n\n/* regular lines */\n    #${n} .match-wrapper .match-lines-area {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        display: flex;\n        flex-direction: column;\n        pointer-events: none;\n        z-index: 1;\n    }\n    #${n} .match-wrapper .match-lines-area .line-wrapper {\n        flex: 1; /* each of 2 empty guys takes 50% height */\n        color: ${t("connectionLinesColor")}; /* for box-shadow color, not text */\n        transition: color 0.1s ease-out, border-color 0.1s ease-out;\n    }\n\n\n    #${n} .match-wrapper.highlighted .match-lines-area .line-wrapper {\n        color: ${t("highlightedConnectionLinesColor")}; /* for box-shadow color, not text */\n    }\n\n    #${n} .match-wrapper:nth-child(even) .line-wrapper.upper {\n        box-shadow: ${t("connectionLinesWidth")}px 0px 0px 0px;\n        border-bottom: ${t("connectionLinesWidth")}px solid ${t("connectionLinesColor")};\n    }\n    #${n} .match-wrapper:nth-child(odd) .line-wrapper.lower {\n        box-shadow: ${t("connectionLinesWidth")}px 0px 0px 0px;\n        border-top: ${t("connectionLinesWidth")}px solid ${t("connectionLinesColor")};\n    }\n    #${n} .round-wrapper:last-of-type .line-wrapper {\n        box-shadow: none !important;\n    }\n/* highlighted lines */\n    #${n} .match-wrapper.highlighted .line-wrapper {\n        border-color: ${t("highlightedConnectionLinesColor")} !important;\n    }\n    #${n} .match-wrapper.last-highlighted .line-wrapper {\n        color: ${t("connectionLinesColor")} !important;\n    }\n\n\n    #${n} .side-wrapper.highlighted .players-info,\n    #${n} .side-wrapper:hover .player-title {\n        color: ${t("highlightedPlayerTitleColor")};\n    }\n\n    #${n} .side-wrapper {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        padding-top: ${t("matchAxisMargin")}px;\n        padding-bottom: ${t("matchAxisMargin")}px;\n        padding-right: ${Math.floor(t("matchFontSize")/3*2)}px;\n        padding-left: ${Math.floor(t("matchFontSize")/2)}px;\n        color: ${t("matchTextColor")}; /* difined at this depth because on upper levels color property is used for box-shadow tricks */\n    }\n\n    #${n} .side-wrapper.empty-side {\n        pointer-events: none;\n    }\n\n    #${n} .side-wrapper:last-of-type {\n        margin-top: -${t("connectionLinesWidth")}px;\n        padding-top: ${t("matchAxisMargin")+t("connectionLinesWidth")}px;\n    }\n\n    #${n} .match-wrapper.live .match-body .sides {\n        border-color: ${t("liveMatchBorderColor")};\n        background-color: ${t("liveMatchBackgroundColor")};\n    }\n\n\n\n\n    #${n} .side-info-item {\n        display: grid;\n        grid-auto-rows: minmax(0, 1fr); /* equal height rows */\n        grid-template-columns: auto;\n        align-items: center;\n        pointer-events: none; /* to capture clicks on .side-wrapper */\n    }\n\n    #${n} .side-info-item.entry-status {\n        width: ${1.5*t("matchFontSize")}px;\n        font-size: ${t("matchFontSize")-4}px;\n        text-align: center;\n    }\n\n    #${n} .side-info-item.players-info {\n        grid-row-gap: ${t("oneSidePlayersGap")}px;\n        flex: 1;\n        padding-left: ${t("matchFontSize")/3*2}px;\n        min-width: 0;\n    }\n\n    #${n} .player-wrapper {\n        display: flex;\n        align-items: center;\n        min-width: 0;\n    }\n\n    #${n} .player-wrapper .nationality {\n        width: ${1.7*t("matchFontSize")}px;\n        font-size: ${t("matchFontSize")-4}px;\n        text-align: center;\n        margin-right: ${t("matchFontSize")/2}px;\n        display: flex;\n        justify-content: center;\n        flex-shrink: 0;\n    }\n\n    #${n} .player-wrapper .nationality > img {\n        max-height: ${t("matchFontSize")}px;\n    }\n\n    #${n} .player-wrapper .player-title {\n        flex: 1;\n        padding-right: ${1.5*t("matchFontSize")}px;\n        font-family: ${t("playerTitleFontFamily")||t("rootFontFamily")};\n        transition: color 0.1s ease-out, opacity 0.1s ease-out;\n        white-space: nowrap;\n        min-width: 0;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        text-align: left;\n    }\n\n    #${n} .side-wrapper.looser:not(.highlighted) .player-title,\n    #${n} .side-wrapper .single-score:not(.winner) {\n        opacity: 0.54;\n    }\n    \n    #${n} .side-info-item.winner-mark {\n        padding-right: ${t("distanceBetweenScorePairs")}px;\n    }\n\n    #${n} .side-info-item.serving-mark {\n        border-radius: 50%;\n        background-color: #b7cf15;\n        width: ${t("matchFontSize")/2.5}px;\n        height: ${t("matchFontSize")/2.5}px;\n        margin-left: ${t("matchFontSize")/2}px;\n    }\n\n    #${n} .side-info-item.serving-mark.transparent {\n        background-color: transparent;\n    }\n\n    #${n} .side-info-item.score {\n        grid-auto-flow: column;\n        font-family: ${t("scoreFontFamily")||t("rootFontFamily")};\n        grid-column-gap: ${t("distanceBetweenScorePairs")}px;\n    }\n    #${n} .single-score {\n        display: flex;\n        overflow: visible;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    #${n} .tie-break {\n        font-size: ${Math.floor(t("matchFontSize")/3*2)}px;\n        padding-left: 1px;\n        margin-top: -${Math.floor(t("matchFontSize")/5)}px;\n        margin-right: -${Math.floor(t("matchFontSize")/5)}px;\n    }\n\n    #${n} .single-score .side-own-score {\n        display: flex;\n    }\n\n    #${n} .single-score .other-side-score {\n        display: flex;\n        height: 1px;\n        overflow: hidden;\n    }\n\n    #${n} .side-info-item.subscore {\n        min-width: ${2*t("matchFontSize")}px;\n        text-align: center;\n        border: 1px solid ${t("matchTextColor")};\n        padding: 0 ${t("matchFontSize")/4}px;\n        margin-left: ${t("matchFontSize")/2}px;\n    }\n\n    #${n} .match-wrapper.live .side-info-item.subscore {\n        border-color: #c4c4c4;\n    }\n\n    #${n} svg.default-winner-svg {\n        height: ${t("matchFontSize")}px;\n        width: auto;\n    }\n`)(o,r)),a(o,"mobile-styles",(n=>`\n    #${n}.mobile .round-wrapper .match-wrapper {\n        padding-left: 1.5%;\n        padding-right: 1.5%;\n    }\n\n    #${n}.mobile .round-fake-padding {\n        display: none;\n    }\n\n    #${n}.mobile .match-body .sides {\n        width: 100%;\n    }\n\n`)(o))},F=(n,t)=>{const e=r(n);try{o=e,Array.isArray(o.rounds)||d("Expected an array of rounds, instead got: ",o.rounds),0===o.rounds.length&&d("At least 1 round must be provided"),o.rounds.forEach((n=>{i(n)||d("Round must be an object, instead got: ",n),"string"!=typeof n.id&&d("Round must have an id: ",n),void 0!==n.name&&"string"!=typeof n.name&&d("round.name must be a string: ",n)})),c(o.matches,o.contestants),i(o.contestants)||d("data.contestants must be an object which maps ids to contestants, instead got: ",o.contestants),Object.values(o.contestants).forEach((n=>{void 0!==n.entry_status&&"string"!=typeof n.entry_status&&d("If entry_status is provided for a contestant, it must be a string: ",n),Array.isArray(n.players)?n.players.forEach((n=>{i(n)||d("Player should be an object: ",n),"string"!=typeof n.title&&d("Player must have a title, and it must be a string: ",n),void 0!==n.nationality_code&&"string"!=typeof n.nationality_code&&d("If nationality_code is provided for a player, it must be a string: ",n),void 0!==n.flag_url&&"string"!=typeof n.flag_url&&d("If flag_url is provided for a player, it must be a string: ",n)})):d("Array of players must be provided for a contestant: ",n)}))}catch(n){throw""}var o;Object.assign(t,(n=>{let t=!1,e=!1;return n.matches.forEach((i=>i.sides.forEach((i=>{"string"==typeof n.contestants[i.contestant_id]?.entry_status&&(t=!0),n.contestants[i.contestant_id]?.players.forEach((n=>{"string"!=typeof n.flag_url&&"string"!=typeof n.nationality_code||(e=!0)}))})))),{...n,have_entry_statuses:t,have_nationalities:e,rounds:n.rounds.map(((t,e)=>({...t,title:t.name||h(n.rounds.length,e)})))}})(e))},z=(n,t,a)=>{const s=(()=>{let n={};const t=y();return{update_user_options:t=>{n={...n,...r(t)}},get_final_value:e=>((n,t,e)=>{const o=e[n];if(!o)return void console.warn("options.get_final_value called with a non-existent option name: ",n);let a=o.default_value;const r=t[n];if(void 0!==r)switch(o.type){case"number":"number"==typeof r?a=r:_(n,r);break;case"pixels":"number"==typeof r?(a=r,"number"==typeof o.min_value&&(a=Math.max(a,o.min_value))):_(n,r);break;case"multiline_string":case"string":"string"==typeof r?a=r:_(n,r);break;case"function_or_null":"function"==typeof r||null===r?a=r:_(n,r);break;case"boolean":"boolean"==typeof r?a=r:"false"===r?a=!1:"true"===r?a=!0:_(n,r);break;case"select":o.options.find((n=>i(n)?n.value===r:n===r))?a=r:_(n,r)}return a})(e,n,t),get_user_options:()=>n}})(),l={root_id:"id"+Math.random().toString(16).slice(2)};try{F(n,l)}catch(n){return console.log("err"),{moveToPreviousRound:()=>{},moveToNextRound:()=>{},getNavigationState:()=>{},applyNewOptions:()=>{},applyAllData:()=>{},applyMatchUpdates:()=>{}}}const d=((n,t)=>{n.innerHTML="";const e=`\n        <div class="content-area">\n            <div class="round-titles-wrapper  equal-width-columns-grid">\n        ${t.rounds.map((n=>`<div class="round-title">${n.name}</div>`)).join("")}\n    </div>\n            <div class="matches-vertical-scroller with-hidden-scrollbar">\n        <div class="matches-positioner equal-width-columns-grid"></div>\n    </div>\n            <div class="scrollbar"></div>\n        </div>\n    `,i=o(`\n        <div class="root-brackets-element" id=${t.root_id}>\n            <div class="buttons-header">\n                <div class="navigation-button left"></div>\n                <div class="navigation-button right"></div>\n            </div>\n            <div class="all-but-buttons-header">\n                <div class="navigation-button non-header-button left"></div>\n                ${e}\n                <div class="navigation-button non-header-button right"></div>\n            </div>\n        </div>\n    `);return n.append(i),p(t.root_id)})(t,l);B(a,s,l,d),C(l,d);const h=$(l.root_id,s.get_final_value);return((n,t)=>{let i=!1;new ResizeObserver(e((()=>{i?t():i=!0}))).observe(n)})(t,h.repaint),f(l,s.get_final_value,d,h),{moveToPreviousRound:h.move_left,moveToNextRound:h.move_right,setBaseRoundIndex:h.set_base_round_index,getNavigationState:h.get_state,applyNewOptions:n=>{B(n,s,l,d),h.apply_options()},applyFullDataUpdate:n=>{F(n,l);const t=d.matches_vertical_scroller.scrollTop;d.matches_positioner.innerHTML="",C(l,d),h.repaint(),d.matches_vertical_scroller.scrollTop=t},applyMatchUpdates:n=>{try{c(n,l.contestants)}catch(n){return}n.forEach((n=>{const t=document.querySelector(`#${l.root_id} .round-wrapper[round-id="${n.round_id}"] .match-wrapper:nth-child(${n.order+1})`);if(!t)return;t.replaceWith(o(T(n,l)));const e=l.matches.findIndex((t=>t.match_id===n.match_id));-1===e?l.matches.push(n):l.matches[e]=n}))},getAllData:()=>r(l),getUserOptions:s.get_user_options}};exports.easyPlayoffs=t})();
//# sourceMappingURL=index.js.map