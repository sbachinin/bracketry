(()=>{"use strict";var t={d:(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},n={};t.r(n),t.d(n,{createPlayoffs:()=>z});const e=(t,n)=>{console.error(`Incorrect data. %c ${t} %c${n?JSON.stringify(n,null,2):""}`,"color: #9d7575","font-size: 10px; color: #9d7575")},i=t=>{if(!t.length)return{have_errors:!1,have_critical_error:!1};const n=t.find((t=>t.is_critical));return n?(e(n.message,n.data),{have_errors:!0,have_critical_error:!0}):(e(t[0].message,t[0].data),{have_errors:!0,have_critical_error:!1})},o=(t,n=300)=>{let e;return(...i)=>{clearTimeout(e),e=setTimeout((()=>{t.apply(void 0,i)}),n)}},a=(t,n,e)=>Math.max(Math.min(t,e),n),r=t=>"object"==typeof t&&!Array.isArray(t)&&null!==t,s=t=>{const n=document.createElement("div");return n.innerHTML=t.trim(),n.firstElementChild},l=(t,n,e)=>{const i=document.head.querySelector(`#${t}-${n}`);i&&document.head.removeChild(i),((t,n,e)=>{document.head.insertAdjacentHTML("beforeend",`<style id='${t}-${n}'>${e}</style>`)})(t,n,e)},d=t=>{if(null===t||"object"!=typeof t)return t;let n=new t.constructor;for(let e in t)t.hasOwnProperty(e)&&(n[e]=d(t[e]));return n},c=(t,n)=>{const e=[];return void 0===t?e.push({is_critical:!0,message:"data.matches must be provided and it must be an array"}):Array.isArray(t)||e.push({is_critical:!0,message:"data.matches must be an array, instead got",data:t}),t&&t.length&&t.forEach((t=>{r(t)||e.push({is_critical:!0,message:"Expected a match object, instead got",data:t}),void 0===t.match_id&&e.push({is_critical:!1,message:"Match must contain .match_id property",data:t}),void 0===t.round_id&&e.push({is_critical:!1,message:"Match must contain .round_id property",data:t}),void 0===t.order&&e.push({is_critical:!1,message:"Match must contain .order property",data:t}),"number"!=typeof t.order&&e.push({is_critical:!1,message:"Match.order property is required, and it must be a number",data:t}),Array.isArray(t.sides)?t.sides.forEach((i=>{r(i)||e.push({is_critical:!0,message:"Match's side must be an object",data:t}),"string"!=typeof i.contestant_id&&e.push({is_critical:!1,message:"Side.contestant_id is required and must be a string",data:i}),Object.keys(n).includes(i.contestant_id)||e.push({is_critical:!1,message:"No contestant data found for this side.contestant_id",data:i}),void 0!==i.is_winner&&"boolean"!=typeof i.is_winner&&e.push({is_critical:!1,message:"If you provide side.is_winner, it must be a boolean",data:i}),void 0===i.score||Array.isArray(i.score)||e.push({is_critical:!1,message:"If side.score is provided, it must be an array",data:i}),Array.isArray(i.score)&&i.score.forEach((t=>{r(t)||e.push({is_critical:!1,message:"Score must be an object",data:i}),void 0===t.main_score&&e.push({is_critical:!1,message:'If you provide a side.score, it must contain a "main_score" property',data:i}),"number"!=typeof t.main_score&&"string"!=typeof t.main_score&&e.push({is_critical:!1,message:"Side.score.main_score must be a number or a string",data:i}),"number"!=typeof t.tie_break&&void 0!==t.tie_break&&e.push({is_critical:!1,message:"If you provide side.score.tie_break, it must be a number",data:i}),"boolean"!=typeof t.is_winner&&void 0!==t.is_winner&&e.push({is_critical:!1,message:"If you provide side.score.is_winner, it must be a boolean",data:i})})),void 0!==i.subscore&&"number"!=typeof i.subscore&&"string"!=typeof i.subscore&&e.push({is_critical:!1,message:"If side.subscore is provided, it must be a number or a string",data:i}),void 0!==i.is_serving&&"boolean"!=typeof i.is_serving&&e.push({is_critical:!1,message:"If side.is_serving is provided, it must be a boolean",data:i})})):e.push({is_critical:!0,message:"Match.sides is required and must be an array",data:t})})),e},h=(t,n)=>n===t-1?"Final":n===t-2?"Semifinals":n===t-3?"Quarterfinals":`1/${Math.pow(2,t-n-1)}`,u=t=>{const n=document.querySelector(`#${t}`);if(!n)return null;const e=t=>n.querySelector(t);return{the_root_element:n,scrollbar:e(".scrollbar"),content_area:e(".content-area"),round_titles_wrapper:e(".round-titles-wrapper"),matches_vertical_scroller:e(".matches-vertical-scroller"),matches_positioner:e(".matches-positioner")}},p="#bbbbbb",m={overMatches:"left and right (on top of matches)",gutters:"left and right (in the gutters)",beforeTitles:"header (before round titles)",overTitles:"header (on top of round titles)",hidden:"hidden"},g=({scrollbar:t,matches_vertical_scroller:n})=>{if("none"===getComputedStyle(t).display)return;t.style.top=n.scrollTop/n.scrollHeight*100+"%",t.style.height=n.clientHeight/n.scrollHeight*100+"%";const e=n.scrollHeight>n.clientHeight;t.style.visibility=e?"visible":"hidden"},v=(t,n,e,i)=>{let a=null,r=null,s=!1;const{the_root_element:l,content_area:d,matches_vertical_scroller:c,scrollbar:h,matches_positioner:u}=e;l.addEventListener("mouseup",(e=>{if(!s&&0===e.button)if(e.target.classList.contains("navigation-button"))i.handle_click(e);else if(e.target.classList.contains("match-body")){const i=e.target.closest(".match-wrapper")?.getAttribute("match-id");n("onMatchClick")(t.matches.find((t=>t.match_id===i)))}})),h.addEventListener("mousedown",(t=>{0===t.button&&(s=!0,a=t.clientY,r=c.scrollTop,h.classList.add("dragged"))})),window.addEventListener("mouseup",(t=>{s=!1,a=null,r=null,h.classList.remove("dragged")})),window.addEventListener("mousemove",((t,n)=>{let e=!1;return(...n)=>{e||(t.apply(void 0,n),e=!0,setTimeout((()=>{e=!1}),15))}})((t=>{if(s){const n=(t.clientY-a)/d.clientHeight;c.scrollTop=r+n*c.scrollHeight}})));const p=o((()=>{c.style.overflowY="scroll"}),200);window.addEventListener("scroll",(()=>{c.style.overflowY="hidden",p()})),c.addEventListener("scroll",(()=>g(e)))},f={GENERAL_OPTIONS:{mainBorderColor:{title:"Main border color",type:"string",default_value:p},rootBackgroundColor:{title:"Root background color",type:"string",default_value:"#ffffff"},mainVerticalPadding:{title:"Main vertical padding (before first match and after last match)",type:"pixels",default_value:20,min_value:0},visibleRoundsCount:{title:"How many rounds to display (0 for 'auto', i.e. as much as possible). Only integers please",type:"number",default_value:0},showScrollbar:{title:"Should show scrollbar",type:"boolean",default_value:!0},scrollbarWidth:{title:"Scrollbar width",type:"pixels",default_value:"5"},scrollbarColor:{title:"Scrollbar color",type:"string",default_value:"#d3d3d3"}},ROUND_TITLE_OPTIONS:{roundTitlesHeight:{title:"Round titles height",type:"pixels",default_value:"50"},roundTitlesBorderBottomColor:{title:"Round titles bottom border-color",type:"string",default_value:p},roundTitleColor:{title:"Round title color",type:"string",default_value:"#000"}},NAVIGATION_OPTIONS:{navButtonsPosition:{title:"Navigation (switch rounds) buttons position",type:"select",options:[...Object.keys(m)],default_value:"gutters",explanation:Object.entries(m).map((([t,n])=>`<span style="text-decoration: underline;">${t}</span>: ${n}`)).join("<br />")},navigationButtonsTopDistance:{title:"Navigation buttons distance from content top, in any units",type:"string",default_value:"50%",disable_if:t=>"overMatches"!==t.navButtonsPosition,explanation:"navigationButtonsTopDistance option takes effect only when navButtonsPosition is set to 'overMatches'"},navigationGutterBorderColor:{title:"Navigation gutter border color",type:"string",default_value:p,disable_if:t=>"gutters"!==t.navButtonsPosition&&"overTitles"!==t.navButtonsPosition&&"beforeTitles"!==t.navButtonsPosition,explanation:"navigationGutterBorderColor options is applied only when navButtonsPosition is 'gutters' or 'overTitles' or 'beforeTitles'"},defaultNavigationSvgSize:{title:"Default navigation arrow size",type:"pixels",default_value:"50"},navigationSvgColor:{title:"Navigation buttons svg color",type:"string",default_value:"#161616"},leftNavigationButtonBackground:{title:"Left navigation button background",type:"string",default_value:"transparent",explanation:"leftNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'"},rightNavigationButtonBackground:{title:"Right navigation button background",type:"string",default_value:"transparent",explanation:"rightNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'"},leftNavigationButtonHTML:{title:"Inner HTML of LEFT navigation button (<svg> / <img> / whatever)",type:"multiline_string",default_value:'\n            <svg class="default-navigation-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z"/></svg>\n        '},rightNavigationButtonHTML:{title:"Inner HTML of RIGHT navigation button (<svg> / <img> / whatever)",type:"multiline_string",default_value:'\n            <svg class="default-navigation-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z"/></svg>\n        '}},FONTS_OPTIONS:{rootFontFamily:{title:'Root font-family (applied to blocks with an "inherit" font-family)',type:"string",default_value:"Open Sans, Roboto, sans-serif"},roundTitlesFontFamily:{title:"Round titles font-family",type:"string",default_value:"inherit"},roundTitlesFontSize:{title:"Round titles font-size",type:"pixels",default_value:30,min_value:8},matchTextColor:{title:"Match text color",type:"string",default_value:"#000"},matchFontSize:{title:"Match font-size",type:"pixels",default_value:16,min_value:8},playerTitleFontFamily:{title:"Player title font family",type:"string",default_value:"inherit"},highlightedPlayerTitleColor:{title:"Highlighted player title color",type:"string",default_value:"#003ae6",explanation:"This color is applied to a players' titles when\n            <br />\n            1) contestant is under cursor\n            <br />\n            2) contestant's match history is highlighted"},scoreFontFamily:{title:'Score font-family (provide "inherit" to use rootFontFamily option)',type:"string",default_value:"inherit"}},CONNECTION_LINES_OPTIONS:{connectionLinesWidth:{title:"Connection lines width",type:"pixels",default_value:2,min_value:0},connectionLinesColor:{title:"Connection lines color",type:"string",default_value:"#dcdcdc"},highlightedConnectionLinesColor:{title:"Highlighted connection lines color",type:"string",default_value:"#7698ff"}},MATCH_OPTIONS:{matchMaxWidth:{title:"Max match width",type:"pixels",default_value:450,explanation:"Specifying smaller width here will help easy-playoffs draw a greater number of rounds within a given width"},matchMinVerticalGap:{title:"Minimal vertical distance between matches",type:"pixels",default_value:25,explanation:"Minimal distance means a distance between matches of the leftmost visible round when the visible height isn't enough to contain all matches of this round"},matchHorMargin:{title:"Matches' horizontal margins",type:"pixels",default_value:"20",explanation:'Note that in "mobile" (1-round) layout this option will take no effect. Instead a margin of 1.5% will be used'},matchAxisMargin:{title:"Vertical distance between match axis and each side of a match",type:"pixels",default_value:4},oneSidePlayersGap:{title:"Vertical distance between players of one side of a match (e.g. of tennis doubles)",type:"pixels",default_value:2},liveMatchBorderColor:{title:"Live match border color",type:"string",default_value:"#44c985"},liveMatchBackgroundColor:{title:"Live match background color",type:"string",default_value:"transparent"},distanceBetweenScorePairs:{title:"Distance between scores (e.g. between sets in tennis)",type:"pixels",default_value:14,min_value:0}},CALLBACKS:{onMatchClick:{title:"What happens when a user clicks on a match (JS function)",type:"function_or_null",default_value:null,explanation:"\n            Your function will be called with a data of a match that was clicked.\n            <br /><br />\n            Example:\n            <div class=\"code\">{\n    onMatchClick: (match) => {\n        location.href = `/matches/${match.match_id}`\n    }\n}\n</div>\n<br />\nIf you provide this function, contestant's match history will not be highlighted when you click a match's side"},onMatchSideClick:{title:"What happens when a user clicks on a side of a match (JS function)",type:"function_or_null",default_value:null,explanation:"\n            Your function will be called with\n            <br />\n            1) data of a contestant which was clicked,\n            <br />\n            2) this contestant's id,\n            <br />\n            3) data of a match within which a side was clicked\n            <br />\n            <br />\n            Example:\n            <div class=\"code\">{\n    onMatchSideClick: (contestant, contestant_id, match) => {\n        location.href = `/teams/${contestant_id}`\n    }\n}\n</div>\n            <br />\n            <br />\n            If you provide this function, it will discard the default behaviour: contestant's match history will not be highlighted when you click a match's side"}}},b=()=>{const t={};return Object.values(f).forEach((n=>Object.assign(t,n))),t};let y=!1;const _=(t,n)=>{requestAnimationFrame((()=>{y||(y=!0,console.warn(`Impossible value %c${JSON.stringify(n,null,2)}%c provided for ${t} option. Default value of %c${(()=>{const t={};return Object.entries(b()).forEach((([n,{default_value:e}])=>{t[n]=e})),t})()[t]}%c will be used instead`,"background: pink","","background: #c7ffc9",""))}))},w=(t,n,e)=>{const i=e("visibleRoundsCount");return void 0!==i&&i>=1?Math.floor(i):Math.max(1,Math.floor(n.content_area.clientWidth/t))},$=t=>{const n=t.the_root_element.classList.contains("mobile");t.the_root_element.classList.remove("mobile"),t.the_root_element.classList.add("free-layout");const e=t.matches_positioner.firstElementChild.clientWidth;return t.the_root_element.classList.remove("free-layout"),n&&t.the_root_element.classList.add("mobile"),e},x=[];function k(){x.includes(this.src)||x.push(this.src),this.removeEventListener("error",k),this.removeEventListener("load",S),this.remove()}function S(){this.removeEventListener("error",k),this.removeEventListener("load",S)}const M=(t,n,e)=>{let i="",o=e.contestants[t.contestant_id];return o?(e.have_entry_statuses&&(i+=`<div class="side-info-item entry-status">${o.entry_status||""}</div>`),i+=`<div class="side-info-item players-info">\n        ${o.players.map((t=>((t,n)=>`<div class="player-wrapper">\n    ${((t,n)=>{if(!n.have_nationalities)return"";let e="";return t.nationality_code&&(e=t.nationality_code),t.flag_url&&![...x].includes(t.flag_url)&&(e=`<img class="player-flag" src="${t.flag_url}" loading=lazy />`),`<div class="nationality">${e}</div>`})(t,n)}\n    <div class="player-title">${t.title}</div>\n</div>`)(t,e))).join("")}\n    </div>`,t.is_winner&&(i+='<div class="side-info-item winner-mark">\n            <svg class="default-winner-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path xmlns="http://www.w3.org/2000/svg" d="M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z"/></svg>\n        </div>'),Array.isArray(t.score)&&(i+=`<div class="side-info-item score">\n            ${t.score.map(((e,i)=>{let o=e.is_winner;return void 0===o&&(o=!!t.is_winner),`<div class="single-score ${o?"winner":""}">\n                    <div class="side-own-score">\n                        <span class="main-score">${e.main_score}</span>\n                        ${"number"==typeof e.tie_break?`<span class="tie-break">${e.tie_break}</span>`:""}\n                    </div>\n                    <span class="other-side-score"> \x3c!-- this block is for horizontal alignment between two sides' scores --\x3e\n                        <span class="main-score">${n?.score[i].main_score}</span>\n                        ${"number"==typeof n?.score[i].tie_break?`<span class="tie-break">${n?.score[i].tie_break}</span>`:""}\n                    </span>\n                </div>`})).join("")}\n        </div>`),t.subscore&&(i+=`<div class="side-info-item subscore">${t.subscore}</div>`),n?.is_serving?i+='<div class="side-info-item serving-mark transparent"></div>':t.is_serving&&(i+='<div class="side-info-item serving-mark"></div>'),i):""},L=(t,n,e)=>`<div class="side-wrapper\n            ${void 0===t||void 0===e.contestants[t?.contestant_id]?"empty-side":""}\n            ${n?.is_winner?"looser":""}\n            ${t?.is_winner?"winner":""}\n        "\n        ${t?` contestant-id="${t.contestant_id}"`:""}\n    >\n        ${t?M(t,n,e):""}\n    </div>`,T=(t,n)=>{if(void 0===t)return`<div class="match-wrapper missing-match-placeholder">\n            ${L(null,null,n)}\n            ${L(null,null,n)}\n            <div class="match-lines-area">\n                <div class="line-wrapper upper"></div>\n                <div class="line-wrapper lower"></div>\n            </div>\n        </div>`;let e="";return!t.sides.find((t=>Array.isArray(t.score)&&t.score.length))&&t.match_status&&(e=`<div class="match-status">${t.match_status}</div>`),`<div class="match-wrapper ${t.is_live?"live":""}" match-id="${t.match_id}">\n        <div class="match-body">\n            <div class="sides">\n                ${L(t.sides[0],t.sides[1],n)}\n                ${L(t.sides[1],t.sides[0],n)}\n            </div>\n            ${e}\n        </div>\n        <div class="match-lines-area">\n            <div class="line-wrapper upper"></div>\n            <div class="line-wrapper lower"></div>\n        </div>\n    </div>`},C=(t,n)=>{const e=[];t.rounds.forEach(((n,i)=>{e.push(((t,n,e)=>{const i=Math.pow(2,t.rounds.length-1-e),o=s(`\n        <div class="round-wrapper" round-id="${n}">\n            ${(a=i,r=(e,i)=>T(t.matches.find((t=>t.round_id===n&&t.order===i)),t),Array.from(Array(a)).map(r)).join("")}\n            \n            ${0===e?'<div class="round-fake-padding left"></div>':""}\n            ${e===t.rounds.length-1?'<div class="round-fake-padding right"></div>':""}\n\n        </div>\n    `);var a,r;return(t=>{t.querySelectorAll("img.player-flag").forEach((t=>{t.addEventListener("error",k),t.addEventListener("load",S)}))})(o),o})(t,n.id,i))})),n.matches_positioner.append(...e)},B=(t,n,e,i)=>{var o,a;(t=>{if(!r(t))return void console.warn("Options must be an object, instead got: ",t);const n=b();Object.entries(t).forEach((([t,e])=>{n[t]||console.warn(`Unknown option provided: %c${t}`,"background: pink; font-weight: bold")}))})(t),n.update_user_options(t),i.the_root_element.querySelectorAll(".navigation-button.left").forEach((t=>t.innerHTML=n.get_final_value("leftNavigationButtonHTML"))),i.the_root_element.querySelectorAll(".navigation-button.right").forEach((t=>t.innerHTML=n.get_final_value("rightNavigationButtonHTML"))),i.scrollbar.style.display=n.get_final_value("showScrollbar")?"block":"none",o=e.root_id,a=n.get_final_value,l(o,"general-styles",((t,n)=>`\n\n    #${t}.root-brackets-element {\n        background-color: ${n("rootBackgroundColor")};\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        min-width: 300px;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        border: 1px solid ${n("mainBorderColor")};\n    }\n    \n    #${t} .all-but-buttons-header {\n        flex: 1;\n        display: flex;\n        height: 100%;\n    }\n\n    /* protection against external styles */\n    #${t}, #${t} * {\n        box-sizing: border-box;\n        user-select: none;\n        margin: 0;\n        padding: 0;\n        width: auto;\n        height: auto;\n        border: none;\n        border-radius: 0;\n        align-content: unset;\n        align-items: unset;\n        align-self: unset;\n        bottom: unset;\n        top: unset;\n        left: unset;\n        right: unset;\n        box-shadow: none;\n        outline: none;\n        text-decoration: none;\n        white-space: initial;\n        line-height: initial;\n    }\n\n    #${t} .zero-width {\n        width: 0;\n    }\n\n    #${t} .with-hidden-scrollbar {\n        scrollbar-width: none; /* For Firefox */\n        -ms-overflow-style: none; /* For Internet Explorer and Edge */\n    }\n\n    #${t} .with-hidden-scrollbar::-webkit-scrollbar {\n        width: 0px; /* For Chrome, Safari, and Opera */\n    }\n\n    #${t} .full-width-grid-column { /* (a column that takes full width of the parent grid el) */\n        grid-column: 1 / -1;\n    }\n\n    #${t} .equal-width-columns-grid { /* all columns acquire the width of the widest column */\n        display: grid;\n        grid-auto-flow: column;\n        grid-auto-columns: minmax(0, 1fr);\n    }\n\n    \n    \n    #${t} .round-titles-wrapper {\n        width: 100%;\n        display: grid;\n        height: ${n("roundTitlesHeight")}px;\n        font-size: ${n("roundTitlesFontSize")}px;\n        font-family: ${n("roundTitlesFontFamily")||n("rootFontFamily")};\n        color: ${n("roundTitleColor")};\n        border-bottom: 1px solid ${n("roundTitlesBorderBottomColor")};\n        padding-right: 1000px; /* otherwise the border-bottom stopped too early */\n        box-sizing: content-box;\n    }\n\n    #${t} .round-name {\n        display: flex;\n        align-items: center;\n        white-space: nowrap;\n        overflow: hidden;\n        justify-content: center;\n    }\n    #${t} .round-name.hidden {\n        display: none;\n    }\n\n    #${t} .matches-vertical-scroller {\n        flex: 1;\n        position: relative;\n        overflow-y: scroll;\n        overflow-x: hidden;\n    }\n\n    #${t} .matches-positioner {\n        position: relative;\n        display: grid;\n        grid-template-rows: 100%;\n        overflow: hidden;\n        min-height: calc(100% - ${2*n("mainVerticalPadding")}px);\n        margin-top: ${n("mainVerticalPadding")||0}px;\n        margin-bottom: ${n("mainVerticalPadding")||0}px;\n        font-size: ${n("matchFontSize")}px;\n        width: 100%;\n    }\n\n    #${t} .content-area {\n        height: 100%;\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        min-width: 0; /* to make it shrink to the free width of the parent */\n        overflow: hidden;\n        position: relative;\n    }\n\n    #${t} .scrollbar {\n        position: absolute;\n        z-index: 2;\n        right: 0;\n        width: ${n("scrollbarWidth")}px;\n        background: ${n("scrollbarColor")};\n        opacity: 0.7;\n    }\n    #${t} .scrollbar:hover, #${t} .scrollbar.dragged {\n        opacity: 1;\n    }\n\n\n\n\n\n\n\n/*  layout to measure rounds' natural width (where they aren't constrained by 100% and flex and grid stuff) */\n    #${t}.root-brackets-element.free-layout .round-wrapper.hidden {\n        display: grid; /* (instead of 'none') */\n    }    \n    #${t}.root-brackets-element.free-layout .matches-positioner {\n        width: max-content;\n    }\n`)(o,a)),l(o,"buttons-styles",((t,n)=>{const e="gutters"===n("navButtonsPosition"),i="beforeTitles"===n("navButtonsPosition"),o="overTitles"===n("navButtonsPosition"),a="hidden"===n("navButtonsPosition");return`\n\n\n        #${t} .buttons-header {\n            display: ${i||o?"flex":"none"};\n            align-items: center;\n            justify-content: space-between;\n            border-bottom: 1px solid ${n("navigationGutterBorderColor")};\n            ${o?`\n                    position: absolute;\n                    z-index: 1;\n                    left: 0;\n                    right: 0;\n                    height: ${parseInt(n("roundTitlesHeight"))+1}px;\n                `:""}\n        }\n\n        #${t} .buttons-header .navigation-button {\n            display: flex;\n            align-items: center;\n        }\n\n        #${t} .navigation-button {\n            max-height: 100%;\n        }\n\n        #${t} .navigation-button.non-header-button {\n            cursor: auto;\n            user-select: none;\n            z-index: 2;\n            display: ${a||i||o?"none":"flex"};\n            position: ${e?"static":"absolute"};\n            top: ${n("navigationButtonsTopDistance")};\n            transform: ${e?"none":"translate(0, -50%)"};\n            min-height: ${e?"100%":"0"}px;\n        }\n\n\n        #${t} .navigation-button.non-header-button {\n            justify-content: center;\n            align-items: center;\n        }\n        #${t} .navigation-button.non-header-button.left {\n            left: 0;\n            background: ${n("leftNavigationButtonBackground")};\n            border-right: ${e?`1px solid ${n("navigationGutterBorderColor")}`:"none"};\n        }\n        #${t} .navigation-button.non-header-button.right {\n            right: 0;\n            background: ${n("rightNavigationButtonBackground")};\n            border-left: ${e?`1px solid ${n("navigationGutterBorderColor")}`:"none"};\n        }\n        #${t} .navigation-button svg {\n            fill: ${n("navigationSvgColor")};\n        }\n           \n        #${t} .navigation-button.hidden {\n            visibility: hidden;\n        }\n\n        #${t} .navigation-button.active {\n            cursor: pointer;\n        }\n\n        #${t} .navigation-button > * {\n            transition: opacity ease-in-out 0.2s;\n            opacity: 0.15;\n            pointer-events: none;\n        }\n\n        #${t} .navigation-button.active > * {\n            opacity: 0.65;\n        }\n\n        #${t} .navigation-button.active:hover > * {\n            opacity: 1;\n        }\n\n        #${t} .default-navigation-svg {\n            height: auto;\n            padding: ${n("defaultNavigationSvgSize")/6}px ${n("defaultNavigationSvgSize")/8}px;\n            width: ${n("defaultNavigationSvgSize")}px;\n        }\n    `})(o,a)),l(o,"rounds-styles",((t,n)=>`\n    #${t} {\n        font-family: ${n("rootFontFamily")};\n    }\n\n    #${t} .round-wrapper {\n        position: relative;\n        display: grid;\n        grid-auto-rows: minmax(0, 1fr);\n        align-items: stretch;\n        min-width: 100px;\n        max-width: 100%;\n    }\n\n    #${t} .round-wrapper.hidden {\n        display: none;\n    }\n\n\n\n\n    #${t} .round-fake-padding {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        bottom: 0;\n        width: ${n("matchHorMargin")}px;\n        background: ${n("rootBackgroundColor")};\n    }\n    #${t} .round-fake-padding.left {\n        left: 0;\n    }\n    #${t} .round-fake-padding.right {\n        right: 0;\n    }\n\n\n\n\n\n    #${t} .match-wrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        position: relative;\n        min-height: 40px;\n        padding-top: ${n("matchMinVerticalGap")/2}px;\n        padding-bottom: ${n("matchMinVerticalGap")/2}px;\n        padding-left: ${n("matchHorMargin")}px;\n        padding-right: ${n("matchHorMargin")}px;\n        box-sizing: border-box;\n    }\n    \n\n\n    #${t} .round-wrapper .match-body {\n        width: 100%;\n        transition: background-color 0.1s ease-out;\n        display: flex;\n        max-width: ${n("matchMaxWidth")}px;\n    }\n\n    #${t} .match-body .sides {\n        flex: 1;\n        display: grid;\n        grid-template-rows: minmax(0, 1fr) minmax(0, 1fr); /* two sides will always be of same height */\n        grid-template-columns: minmax(0, 1fr);\n        border: ${n("connectionLinesWidth")}px solid transparent;\n    }\n\n    #${t} .match-body .match-status {\n        font-size: ${Math.floor(.85*n("matchFontSize"))}px;\n        background: ${n("rootBackgroundColor")};\n        z-index: 2;\n        border: ${n("connectionLinesWidth")}px solid ${n("connectionLinesColor")};\n        padding: 2px 6px;\n        align-self: center;\n        margin-right: 2%;\n    }\n\n    #${t} .match-wrapper.highlighted .match-body .match-status {\n        border-color: ${n("highlightedConnectionLinesColor")};\n    }\n\n    ${n("onMatchClick")?`\n            #${t} .match-body {\n                pointer-events: auto;\n                cursor: pointer;\n            }\n            #${t} .match-body * {\n                pointer-events: none; /* handle click/hover only on whole body */\n            }\n            #${t} .match-body:hover {\n                background-color: rgb(250, 250, 250);\n            }\n            #${t} .match-body:hover .player-title {\n                color: ${n("highlightedPlayerTitleColor")};\n            }\n        `:""}\n\n\n\n\n    #${t} .match-wrapper.missing-match-placeholder {\n        pointer-events: none;\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n/* LINES */\n\n/* regular lines */\n    #${t} .match-wrapper .match-lines-area {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        display: flex;\n        flex-direction: column;\n        pointer-events: none;\n        z-index: 1;\n    }\n    #${t} .match-wrapper .match-lines-area .line-wrapper {\n        flex: 1; /* each of 2 empty guys takes 50% height */\n        color: ${n("connectionLinesColor")}; /* for box-shadow color, not text */\n        transition: color 0.1s ease-out, border-color 0.1s ease-out;\n    }\n\n\n    #${t} .match-wrapper.highlighted .match-lines-area .line-wrapper {\n        color: ${n("highlightedConnectionLinesColor")}; /* for box-shadow color, not text */\n    }\n\n    #${t} .match-wrapper:nth-child(even) .line-wrapper.upper {\n        box-shadow: ${n("connectionLinesWidth")}px 0px 0px 0px;\n        border-bottom: ${n("connectionLinesWidth")}px solid ${n("connectionLinesColor")};\n    }\n    #${t} .match-wrapper:nth-child(odd) .line-wrapper.lower {\n        box-shadow: ${n("connectionLinesWidth")}px 0px 0px 0px;\n        border-top: ${n("connectionLinesWidth")}px solid ${n("connectionLinesColor")};\n    }\n    #${t} .round-wrapper:last-of-type .line-wrapper {\n        box-shadow: none !important;\n    }\n/* highlighted lines */\n    #${t} .match-wrapper.highlighted .line-wrapper {\n        border-color: ${n("highlightedConnectionLinesColor")} !important;\n    }\n    #${t} .match-wrapper.last-highlighted .line-wrapper {\n        color: ${n("connectionLinesColor")} !important;\n    }\n\n\n    #${t} .side-wrapper.highlighted .players-info,\n    #${t} .side-wrapper:hover .player-title {\n        color: ${n("highlightedPlayerTitleColor")};\n    }\n\n    #${t} .side-wrapper {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        padding-top: ${n("matchAxisMargin")}px;\n        padding-bottom: ${n("matchAxisMargin")}px;\n        padding-right: ${Math.floor(n("matchFontSize")/3*2)}px;\n        padding-left: ${Math.floor(n("matchFontSize")/2)}px;\n        color: ${n("matchTextColor")}; /* difined at this depth because on upper levels color property is used for box-shadow tricks */\n    }\n\n    #${t} .side-wrapper.empty-side {\n        pointer-events: none;\n    }\n\n    #${t} .side-wrapper:last-of-type {\n        margin-top: -${n("connectionLinesWidth")}px;\n        padding-top: ${n("matchAxisMargin")+n("connectionLinesWidth")}px;\n    }\n\n    #${t} .match-wrapper.live .match-body .sides {\n        border-color: ${n("liveMatchBorderColor")};\n        background-color: ${n("liveMatchBackgroundColor")};\n    }\n\n\n\n\n    #${t} .side-info-item {\n        display: grid;\n        grid-auto-rows: minmax(0, 1fr); /* equal height rows */\n        grid-template-columns: auto;\n        align-items: center;\n        pointer-events: none; /* to capture clicks on .side-wrapper */\n    }\n\n    #${t} .side-info-item.entry-status {\n        width: ${1.5*n("matchFontSize")}px;\n        font-size: ${n("matchFontSize")-4}px;\n        text-align: center;\n    }\n\n    #${t} .side-info-item.players-info {\n        grid-row-gap: ${n("oneSidePlayersGap")}px;\n        flex: 1;\n        padding-left: ${n("matchFontSize")/3*2}px;\n        min-width: 0;\n    }\n\n    #${t} .player-wrapper {\n        display: flex;\n        align-items: center;\n        min-width: 0;\n    }\n\n    #${t} .player-wrapper .nationality {\n        width: ${1.7*n("matchFontSize")}px;\n        font-size: ${n("matchFontSize")-4}px;\n        text-align: center;\n        margin-right: ${n("matchFontSize")/2}px;\n        display: flex;\n        justify-content: center;\n        flex-shrink: 0;\n    }\n\n    #${t} .player-wrapper .nationality > img {\n        max-height: ${n("matchFontSize")}px;\n    }\n\n    #${t} .player-wrapper .player-title {\n        flex: 1;\n        padding-right: ${1.5*n("matchFontSize")}px;\n        font-family: ${n("playerTitleFontFamily")||n("rootFontFamily")};\n        transition: color 0.1s ease-out, opacity 0.1s ease-out;\n        white-space: nowrap;\n        text-align: left;\n    }\n\n    #${t} .side-wrapper.looser:not(.highlighted) .player-title,\n    #${t} .side-wrapper .single-score:not(.winner) {\n        opacity: 0.54;\n    }\n    \n    #${t} .side-info-item.winner-mark {\n        padding-right: ${n("distanceBetweenScorePairs")}px;\n    }\n\n    #${t} .side-info-item.serving-mark {\n        border-radius: 50%;\n        background-color: #b7cf15;\n        width: ${n("matchFontSize")/2.5}px;\n        height: ${n("matchFontSize")/2.5}px;\n        margin-left: ${n("matchFontSize")/2}px;\n    }\n\n    #${t} .side-info-item.serving-mark.transparent {\n        background-color: transparent;\n    }\n\n    #${t} .side-info-item.score {\n        grid-auto-flow: column;\n        font-family: ${n("scoreFontFamily")||n("rootFontFamily")};\n        grid-column-gap: ${n("distanceBetweenScorePairs")}px;\n    }\n    #${t} .single-score {\n        display: flex;\n        overflow: visible;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    #${t} .tie-break {\n        font-size: ${Math.floor(n("matchFontSize")/3*2)}px;\n        padding-left: 1px;\n        margin-top: -${Math.floor(n("matchFontSize")/5)}px;\n        margin-right: -${Math.floor(n("matchFontSize")/5)}px;\n    }\n\n    #${t} .single-score .side-own-score {\n        display: flex;\n    }\n\n    #${t} .single-score .other-side-score {\n        display: flex;\n        height: 1px;\n        overflow: hidden;\n    }\n\n    #${t} .side-info-item.subscore {\n        min-width: ${2*n("matchFontSize")}px;\n        text-align: center;\n        border: 1px solid ${n("matchTextColor")};\n        padding: 0 ${n("matchFontSize")/4}px;\n        margin-left: ${n("matchFontSize")/2}px;\n    }\n\n    #${t} .match-wrapper.live .side-info-item.subscore {\n        border-color: #c4c4c4;\n    }\n\n    #${t} svg.default-winner-svg {\n        height: ${n("matchFontSize")}px;\n        width: auto;\n    }\n`)(o,a)),l(o,"mobile-styles",(t=>`\n    #${t}.mobile .round-wrapper .match-wrapper {\n        padding-left: 1.5%;\n        padding-right: 1.5%;\n    }\n\n    #${t}.mobile .round-fake-padding {\n        display: none;\n    }\n\n    #${t}.mobile .match-body .sides {\n        width: 100%;\n    }\n\n`)(o))},F=(t,n)=>{if(!r(t))return!1;const e=d(t),{have_critical_error:o}=i((t=>{const n=[];Array.isArray(t.rounds)||n.push({is_critical:!0,message:"Expected an array of rounds, instead got: ",data:t.rounds}),t.rounds&&t.rounds.length&&t.rounds.forEach((t=>{r(t)||n.push({is_critical:!0,message:"Round must be an object, instead got: ",data:t}),void 0===t.id?n.push({is_critical:!0,message:"Round must have an id: ",data:t}):"string"!=typeof t.id&&n.push({is_critical:!0,message:"Round id must be a string: ",data:t}),void 0===t.name?n.push({is_critical:!1,message:"Please provide a name for a round: ",data:t}):"string"!=typeof t.name&&n.push({is_critical:!1,message:"round.name must be a string: ",data:t})}));const e=c(t.matches,t.contestants);return n.push(...e),r(t.contestants)||n.push({is_critical:!0,message:"data.contestants must be an object which maps ids to contestants, instead got: ",data:t.contestants}),r(t.contestants)&&Object.values(t.contestants).forEach((t=>{r(t)||n.push({is_critical:!0,message:"Contestant must be an object, instead got: ",data:t}),void 0!==t.entry_status&&"string"!=typeof t.entry_status&&n.push({is_critical:!1,message:"If entry_status is provided for a contestant, it must be a string: ",data:t}),Array.isArray(t.players)?0===t.players.length?n.push({is_critical:!1,message:"contestant.players must contain at least one element: ",data:t}):t.players.forEach((t=>{r(t)||n.push({is_critical:!1,message:"Player should be an object, instead got: ",data:t}),"string"!=typeof t.title&&n.push({is_critical:!1,message:"Player must have a title, and it must be a string, instead got: ",data:t}),void 0!==t.nationality_code&&"string"!=typeof t.nationality_code&&n.push({is_critical:!1,message:"If nationality_code is provided for a player, it must be a string: ",data:t}),void 0!==t.flag_url&&"string"!=typeof t.flag_url&&n.push({is_critical:!1,message:"If flag_url is provided for a player, it must be a string: ",data:t})})):n.push({is_critical:!0,message:"Array of players must be provided for a contestant: ",data:t})})),n})(e));return!o&&(Object.assign(n,(t=>{let n=!1,e=!1;return t.matches.forEach((i=>i.sides.forEach((i=>{"string"==typeof t.contestants[i.contestant_id]?.entry_status&&(n=!0),t.contestants[i.contestant_id]?.players.forEach((t=>{"string"!=typeof t.flag_url&&"string"!=typeof t.nationality_code||(e=!0)}))})))),{...t,have_entry_statuses:n,have_nationalities:e,rounds:t.rounds.map(((n,e)=>({...n,name:n.name||h(t.rounds.length,e)})))}})(e)),!0)},z=(t,n,e)=>{const l=(()=>{let t={};const n=b();return{update_user_options:n=>{t={...t,...d(n)}},get_final_value:e=>((t,n,e)=>{const i=e[t];if(!i)return void console.warn("options.get_final_value called with a non-existent option name: ",t);let o=i.default_value;const a=n[t];if(void 0!==a)switch(i.type){case"number":"number"==typeof a?o=a:_(t,a);break;case"pixels":"number"==typeof a?(o=a,"number"==typeof i.min_value&&(o=Math.max(o,i.min_value))):_(t,a);break;case"multiline_string":case"string":"string"==typeof a?o=a:_(t,a);break;case"function_or_null":"function"==typeof a||null===a?o=a:_(t,a);break;case"boolean":"boolean"==typeof a?o=a:"false"===a?o=!1:"true"===a?o=!0:_(t,a);break;case"select":i.options.find((t=>r(t)?t.value===a:t===a))?o=a:_(t,a)}return o})(e,t,n),get_user_options:()=>t}})(),h={root_id:"id"+Math.random().toString(16).slice(2)};if(!(F(t,h)&&(p=n,p instanceof Element&&p.closest("html"))))return{moveToPreviousRound:()=>{},moveToNextRound:()=>{},getNavigationState:()=>{},applyNewOptions:()=>{},applyMatchesUpdates:()=>{}};var p;const m=((t,n)=>{t.innerHTML="";const e=`\n        <div class="content-area">\n            <div class="round-titles-wrapper  equal-width-columns-grid">\n        ${n.rounds.map(((t,n)=>`<div class="round-name">${t.name}</div>`)).join("")}\n    </div>\n            <div class="matches-vertical-scroller with-hidden-scrollbar">\n        <div class="matches-positioner equal-width-columns-grid"></div>\n    </div>\n            <div class="scrollbar"></div>\n        </div>\n    `,i=s(`\n        <div class="root-brackets-element" id=${n.root_id}>\n            <div class="buttons-header">\n                <div class="navigation-button left"></div>\n                <div class="navigation-button right"></div>\n            </div>\n            <div class="all-but-buttons-header">\n                <div class="navigation-button non-header-button left"></div>\n                ${e}\n                <div class="navigation-button non-header-button right"></div>\n            </div>\n        </div>\n    `);return t.append(i),u(n.root_id)})(n,h);if(B(e,l,h,m),C(h,m),null===m.matches_positioner.firstElementChild)return;const f=((t,n)=>{const e=u(t),i=((t,n)=>{let e=0;const i=(i,o)=>{const r=t.matches_positioner.children.length-w(o,t,n);e=a(i,0,r)};return{set:i,try_decrement:t=>i(e-1,t),try_increment:t=>i(e+1,t),get:()=>e}})(e,n);let o=$(e);const r=()=>((t,n,e,i)=>{const o=[...n.matches_positioner.querySelectorAll(".round-wrapper")],r=[...n.round_titles_wrapper.children],s=w(t,n,i);let l=0;l=(n.matches_vertical_scroller.scrollTop+n.matches_vertical_scroller.clientHeight/2)/n.matches_vertical_scroller.scrollHeight,o.forEach(((t,n)=>{const i=n>=e&&n<=e+s-1;t.classList[i?"remove":"add"]("hidden"),r[n].classList[i?"remove":"add"]("hidden")})),n.the_root_element.classList[1===s?"add":"remove"]("mobile");const d=n.matches_vertical_scroller.scrollHeight*l;n.matches_vertical_scroller.scrollTop=a(d-n.matches_vertical_scroller.clientHeight/2,0,n.matches_vertical_scroller.scrollHeight-n.matches_vertical_scroller.clientHeight),((t,n)=>{let e=n>0,i=t.matches_positioner.lastChild.classList.contains("hidden");t.the_root_element.querySelectorAll(".navigation-button.left").forEach((t=>t.classList[e?"add":"remove"]("active"))),t.the_root_element.querySelectorAll(".navigation-button.right").forEach((t=>t.classList[i?"add":"remove"]("active")))})(n,e),g(n)})(o,e,i.get(),n);r();const s=()=>{i.try_decrement(o),r()},l=()=>{e.matches_positioner.lastChild.classList.contains("hidden")&&(i.try_increment(o),r())};return{move_left:s,move_right:l,set_base_round_index:t=>{i.set(t,o),r()},update_round_natural_width:()=>{o=$(e)},repaint:r,handle_click:t=>{t.target.classList.contains("active")&&(t.target.classList.contains("left")&&s(),t.target.classList.contains("right")&&l())},get_state:()=>{const n=u(t);return{reachedRightEdge:!n.matches_positioner.lastChild?.classList.contains("hidden"),allRoundsAreVisible:null===n.matches_positioner.querySelector(".round-wrapper.hidden"),baseRoundIndex:i.get()}}}})(h.root_id,l.get_final_value);return((t,n)=>{let e=!1;new ResizeObserver(o((()=>{e?n():e=!0}))).observe(t)})(n,f.repaint),v(h,l.get_final_value,m,f),{moveToPreviousRound:f.move_left,moveToNextRound:f.move_right,setBaseRoundIndex:f.set_base_round_index,getNavigationState:f.get_state,applyNewOptions:t=>{B(t,l,h,m),f.update_round_natural_width(),f.repaint()},applyFullDataUpdate:t=>{if(!F(t,h))return void console.warn("Failed to apply new data");const n=m.matches_vertical_scroller.scrollTop;m.round_titles_wrapper.innerHTML=h.rounds.map(((t,n)=>`<div class="round-name">${t.name}</div>`)).join(""),m.matches_positioner.innerHTML="",C(h,m),f.update_round_natural_width(),f.repaint(),m.matches_vertical_scroller.scrollTop=n},applyMatchesUpdates:t=>{const{have_errors:n}=i(c(t,h.contestants));n||t.forEach((t=>{const n=document.querySelector(`#${h.root_id} .round-wrapper[round-id="${t.round_id}"] .match-wrapper:nth-child(${t.order+1})`);if(!n)return;n.replaceWith(s(T(t,h)));const e=h.matches.findIndex((n=>n.match_id===t.match_id));-1===e?h.matches.push(t):h.matches[e]=t}))},getAllData:()=>d(h),getUserOptions:l.get_user_options}};exports.easyPlayoffs=n})();
//# sourceMappingURL=index.js.map