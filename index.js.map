{"version":3,"file":"index.js","mappings":"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","sources":["webpack://easyPlayoffs/webpack/bootstrap","webpack://easyPlayoffs/webpack/runtime/define property getters","webpack://easyPlayoffs/webpack/runtime/hasOwnProperty shorthand","webpack://easyPlayoffs/webpack/runtime/make namespace object","webpack://easyPlayoffs/./lib/data/handle_errors.mjs","webpack://easyPlayoffs/./lib/utils/utils.mjs","webpack://easyPlayoffs/./lib/data/validate_matches.mjs","webpack://easyPlayoffs/./lib/data/permanent_drawing_props.mjs","webpack://easyPlayoffs/./lib/stable_elements/create_stable_elements.mjs","webpack://easyPlayoffs/./lib/constants.mjs","webpack://easyPlayoffs/./lib/stable_elements/scrollbar.mjs","webpack://easyPlayoffs/./lib/effects/highlight.mjs","webpack://easyPlayoffs/./lib/mouse_events/mouse_events.mjs","webpack://easyPlayoffs/./lib/options/options_meta.mjs","webpack://easyPlayoffs/./lib/options/options_meta_getter.mjs","webpack://easyPlayoffs/./lib/options/validate_user_options.mjs","webpack://easyPlayoffs/./lib/draw/flags.mjs","webpack://easyPlayoffs/./lib/draw/get_match_element.mjs","webpack://easyPlayoffs/./lib/draw/create_matches.mjs","webpack://easyPlayoffs/./lib/draw/get_round_element.mjs","webpack://easyPlayoffs/./lib/lib.mjs","webpack://easyPlayoffs/./lib/styles/update_all_styles.mjs","webpack://easyPlayoffs/./lib/styles/general_styles.mjs","webpack://easyPlayoffs/./lib/styles/buttons_styles.mjs","webpack://easyPlayoffs/./lib/styles/round_styles.mjs","webpack://easyPlayoffs/./lib/styles/mobile_styles.mjs","webpack://easyPlayoffs/./lib/data/analyze_data.mjs","webpack://easyPlayoffs/./lib/options/create_options_dealer.mjs","webpack://easyPlayoffs/./lib/navigation/navigation.mjs"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const log_data_error = (msg, data) => {\r\n    console.error(\r\n        `Incorrect data. %c ${msg} %c${data ? JSON.stringify(data, null, 2) : ''}`,\r\n        'color: #9d7575',\r\n        'font-size: 10px; color: #9d7575'\r\n    )\r\n}\r\n\r\nexport const handle_data_errors = (errors) => {\r\n    if (!errors.length) {\r\n        return {\r\n            have_errors: false,\r\n            have_critical_error: false\r\n        }\r\n    }\r\n\r\n    const critical_error = errors.find(err => err.is_critical)\r\n    \r\n    if (!critical_error) {\r\n        log_data_error(errors[0].message, errors[0].data)\r\n        return {\r\n            have_errors: true,\r\n            have_critical_error: false\r\n        }\r\n    }\r\n\r\n    log_data_error(critical_error.message, critical_error.data)\r\n    return {\r\n        have_errors: true,\r\n        have_critical_error: true\r\n    }\r\n}\r\n","export const debounce = (fn, timeout = 300) => {\r\n    let timer;\r\n    return (...args) => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => { fn.apply(this, args); }, timeout);\r\n    };\r\n}\r\n\r\n// unused\r\nexport const throttle = (fn, limit) => {\r\n    let waiting = false;\r\n    return (...args) => {\r\n        if (!waiting) {\r\n            fn.apply(this, args);\r\n            waiting = true;\r\n            setTimeout(\r\n                () => {\r\n                    waiting = false\r\n                },\r\n                limit\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const create_unique_id = () => {\r\n    return \"id\" + Math.random().toString(16).slice(2)\r\n}\r\n\r\nexport const within_range = (number, min, max) => {\r\n    return Math.max(Math.min(number, max), min)\r\n}\r\n\r\nexport const is_object = variable => {\r\n    return typeof variable === 'object'\r\n        && !Array.isArray(variable)\r\n        && variable !== null\r\n}\r\n\r\nexport const create_element_from_Html = htmlString => {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = htmlString.trim();\r\n    // Change this to div.childNodes to support multiple top-level nodes\r\n    return div.firstElementChild;\r\n}\r\n\r\nexport const insert_styles = (root_id, styles_id, styles) => {\r\n    document.head.insertAdjacentHTML(\r\n        'beforeend',\r\n        `<style id='${root_id}-${styles_id}'>${styles}</style>`\r\n    )\r\n}\r\n\r\nexport const get_n_things = (n, cb) => {\r\n    return Array.from(Array(n)).map(cb)\r\n}\r\n\r\nexport const update_styles = (root_id, styles_id, styles) => {\r\n    const current_styles_node = document.head.querySelector(`#${root_id}-${styles_id}`)\r\n    if (current_styles_node) document.head.removeChild(current_styles_node)\r\n    insert_styles(root_id, styles_id, styles)\r\n}\r\n\r\n// underscore's \"snapshot\"\r\nexport const deep_clone_object = obj => {\r\n    if (obj === null || typeof obj !== 'object') {\r\n        return obj\r\n    }\r\n\r\n    let temp = new obj.constructor()\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            temp[key] = deep_clone_object(obj[key])\r\n        }\r\n    }\r\n    return temp\r\n}\r\n\r\n// prevent initial resize call\r\nexport const observe_resize_later = (el, cb) => {\r\n    let was_resized = false\r\n    new ResizeObserver(debounce(\r\n        () => {\r\n            if (!was_resized) {\r\n                was_resized = true\r\n                return\r\n            }\r\n            cb()\r\n        }\r\n    )).observe(el)\r\n}\r\n","import { is_object } from '../utils/utils.mjs'\r\n\r\nexport const validate_matches = (matches, contestants) => {\r\n    const errors = []\r\n\r\n    if (matches === undefined) {\r\n        errors.push({\r\n            is_critical: true,\r\n            message: 'data.matches must be provided and it must be an array',\r\n        })\r\n    } else if (!Array.isArray(matches)) {\r\n        errors.push({\r\n            is_critical: true,\r\n            message: 'data.matches must be an array, instead got',\r\n            data: matches\r\n        })\r\n    }\r\n\r\n    matches && matches.length && matches.forEach((match) => {\r\n        if (!is_object(match)) {\r\n            errors.push({\r\n                is_critical: true,\r\n                message: 'Expected a match object, instead got',\r\n                data: match\r\n            })\r\n        }\r\n\r\n        if (match.match_id === undefined) {\r\n            errors.push({\r\n                is_critical: false,\r\n                message: 'Match must contain .match_id property',\r\n                data: match\r\n            })\r\n        }\r\n        if (match.round_id === undefined) {\r\n            errors.push({\r\n                is_critical: false,\r\n                message: `Match must contain .round_id property`,\r\n                data: match\r\n            })\r\n        }\r\n        if (match.order === undefined) {\r\n            errors.push({\r\n                is_critical: false,\r\n                message: 'Match must contain .order property',\r\n                data: match\r\n            })\r\n        }\r\n        if (typeof match.order !== 'number') {\r\n            errors.push({\r\n                is_critical: false,\r\n                message: `Match.order property is required, and it must be a number`,\r\n                data: match\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        if (!Array.isArray(match.sides)) {\r\n            errors.push({\r\n                is_critical: true,\r\n                message: 'Match.sides is required and must be an array',\r\n                data: match\r\n            })\r\n        } else {\r\n            match.sides.forEach(side => {\r\n\r\n                if (!is_object(side)) {\r\n                    errors.push({\r\n                        is_critical: true,\r\n                        message: `Match's side must be an object`,\r\n                        data: match\r\n                    })\r\n                }\r\n                \r\n                if (typeof side.contestant_id !== 'string') {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: `Side.contestant_id is required and must be a string`,\r\n                        data: side\r\n                    })\r\n                }\r\n                \r\n                if (!Object.keys(contestants).includes(side.contestant_id)) {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: 'No contestant data found for this side.contestant_id',\r\n                        data: side\r\n                    })\r\n                }\r\n    \r\n                if (side.is_winner !== undefined && typeof side.is_winner !== 'boolean') {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: 'If you provide side.is_winner, it must be a boolean',\r\n                        data: side\r\n                    })\r\n                }\r\n    \r\n                if (side.score !== undefined && !Array.isArray(side.score)) {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: 'If side.score is provided, it must be an array',\r\n                        data: side\r\n                    })\r\n                }\r\n                \r\n                if (Array.isArray(side.score)) {\r\n                    side.score.forEach(single_set_score => {\r\n                        if (!is_object(single_set_score)) {\r\n                            errors.push({\r\n                                is_critical: false,\r\n                                message: 'Score must be an object',\r\n                                data: side\r\n                            })\r\n                        }\r\n                        if (single_set_score.main_score === undefined) {\r\n                            errors.push({\r\n                                is_critical: false,\r\n                                message: 'If you provide a side.score, it must contain a \"main_score\" property',\r\n                                data: side\r\n                            })\r\n                        }\r\n                        if (\r\n                            typeof single_set_score.main_score !== 'number'\r\n                            && typeof single_set_score.main_score !== 'string'\r\n                        ) {\r\n                            errors.push({\r\n                                is_critical: false,\r\n                                message: 'Side.score.main_score must be a number or a string',\r\n                                data: side\r\n                            })\r\n                        }\r\n                        if (\r\n                            typeof single_set_score.tie_break !== 'number'\r\n                            && typeof single_set_score.tie_break !== 'undefined'\r\n                        ) {\r\n                            errors.push({\r\n                                is_critical: false,\r\n                                message: 'If you provide side.score.tie_break, it must be a number',\r\n                                data: side\r\n                            })\r\n                        }\r\n                        if (\r\n                            typeof single_set_score.is_winner !== 'boolean'\r\n                            && typeof single_set_score.is_winner !== 'undefined'\r\n                        ) {\r\n                            errors.push({\r\n                                is_critical: false,\r\n                                message: 'If you provide side.score.is_winner, it must be a boolean',\r\n                                data: side\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n    \r\n                \r\n    \r\n                if (side.subscore !== undefined && typeof side.subscore !== 'number' && typeof side.subscore !== 'string') {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: 'If side.subscore is provided, it must be a number or a string',\r\n                        data: side\r\n                    })\r\n                }\r\n    \r\n                if (side.is_serving !== undefined && typeof side.is_serving !== 'boolean') {\r\n                    errors.push({\r\n                        is_critical: false,\r\n                        message: 'If side.is_serving is provided, it must be a boolean',\r\n                        data: side\r\n                    })\r\n                }\r\n                \r\n            })\r\n        }\r\n        \r\n    })\r\n\r\n    return errors\r\n}","const get_default_round_title = (rounds_count, round_index) => {\r\n    if (round_index === (rounds_count-1)) return 'Final'\r\n    if (round_index === (rounds_count-2)) return 'Semifinals'\r\n    if (round_index === (rounds_count-3)) return 'Quarterfinals'\r\n    return `1/${Math.pow(2, rounds_count - round_index - 1)}`\r\n}\r\n\r\nexport const get_permanent_drawing_props = (all_data) => {\r\n    let have_entry_statuses = false\r\n    let have_nationalities = false\r\n\r\n    all_data.matches.forEach(\r\n        m => m.sides.forEach(\r\n            s => {\r\n                if (typeof all_data.contestants[s.contestant_id]?.entry_status === 'string') {\r\n                    have_entry_statuses = true\r\n                }\r\n\r\n                all_data.contestants[s.contestant_id]?.players.forEach(p => {\r\n                    if (typeof p.flag_url === 'string' || typeof p.nationality_code === 'string') {\r\n                        have_nationalities = true\r\n                    }\r\n                })\r\n            }))\r\n\r\n    return {\r\n        ...all_data,\r\n        have_entry_statuses,\r\n        have_nationalities,\r\n        rounds: all_data.rounds.map((round, round_index) => {\r\n            return {\r\n                ...round,\r\n                title: round.name || get_default_round_title(all_data.rounds.length, round_index),\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { create_element_from_Html } from '../utils/utils.mjs'\r\n\r\nexport const get_elements = (root_id) => {\r\n    const the_root_element = document.querySelector(`#${root_id}`)\r\n    if (!the_root_element) return null\r\n    const find = (s) => the_root_element.querySelector(s)\r\n\r\n    return {\r\n        the_root_element,\r\n        scrollbar: find('.scrollbar'),\r\n        content_area: find('.content-area'),\r\n        round_titles_wrapper: find('.round-titles-wrapper'),\r\n        matches_vertical_scroller: find('.matches-vertical-scroller'),\r\n        matches_positioner: find('.matches-positioner'),\r\n    }\r\n}\r\n\r\nexport const create_stable_elements = (user_wrapper_el, all_data) => {\r\n    user_wrapper_el.innerHTML = ''\r\n\r\n    const round_titles_html = `<div class=\"round-titles-wrapper  equal-width-columns-grid\">\r\n        ${\r\n            all_data.rounds.map((r, i) => {\r\n                return `<div class=\"round-title\">${r.name || `Round ${i + 1}`}</div>`\r\n            }).join('')\r\n        }\r\n    </div>`\r\n\r\n    const matches_vertical_scroller_html = `<div class=\"matches-vertical-scroller with-hidden-scrollbar\">\r\n        <div class=\"matches-positioner equal-width-columns-grid\"></div>\r\n    </div>`\r\n\r\n    const content_area_html = `\r\n        <div class=\"content-area\">\r\n            ${round_titles_html}\r\n            ${matches_vertical_scroller_html}\r\n            <div class=\"scrollbar\"></div>\r\n        </div>\r\n    `\r\n\r\n    const the_root_element = create_element_from_Html(`\r\n        <div class=\"root-brackets-element\" id=${all_data.root_id}>\r\n            <div class=\"buttons-header\">\r\n                <div class=\"navigation-button left\"></div>\r\n                <div class=\"navigation-button right\"></div>\r\n            </div>\r\n            <div class=\"all-but-buttons-header\">\r\n                <div class=\"navigation-button non-header-button left\"></div>\r\n                ${content_area_html}\r\n                <div class=\"navigation-button non-header-button right\"></div>\r\n            </div>\r\n        </div>\r\n    `)\r\n\r\n    user_wrapper_el.append(the_root_element)\r\n    \r\n    return get_elements(all_data.root_id)\r\n}","\r\n\r\n\r\nexport const CURVE_LINE_OFFSET = 40\r\n\r\n\r\nexport const default_border_gray = '#bbbbbb'\r\n\r\nexport const BUTTONS_POSITIONS = {\r\n    overMatches: 'left and right (on top of matches)',\r\n    gutters: 'left and right (in the gutters)',\r\n    beforeTitles: 'header (before round titles)',\r\n    overTitles: 'header (on top of round titles)',\r\n    hidden: 'hidden'\r\n}\r\n\r\n\r\nexport const MOUSE_ACTIONS_DELAY_AFTER_WINDOW_SCROLL = 200","export const update_scrollbar = (\r\n    { scrollbar, matches_vertical_scroller }\r\n) => {\r\n    if (getComputedStyle(scrollbar).display === 'none') return\r\n    scrollbar.style.top = matches_vertical_scroller.scrollTop\r\n        / matches_vertical_scroller.scrollHeight * 100 + '%'\r\n    scrollbar.style.height = matches_vertical_scroller.clientHeight\r\n        / matches_vertical_scroller.scrollHeight * 100 + '%'\r\n\r\n    const content_is_higher = matches_vertical_scroller.scrollHeight > matches_vertical_scroller.clientHeight\r\n    scrollbar.style.visibility = content_is_higher ? 'visible' : 'hidden'\r\n}","export const update_highlight = (matches_positioner, highlighted_contestant_id) => {\r\n    const all_matches = [...matches_positioner.querySelectorAll('.match-wrapper')]\r\n    all_matches.forEach(m => {\r\n            m.classList.remove('highlighted', 'last-highlighted')\r\n            const match_sides = [...m.querySelectorAll('.side-wrapper')]\r\n            match_sides.forEach(s => {\r\n                s.classList.remove('highlighted')\r\n                if (highlighted_contestant_id === null) return\r\n                if (s.getAttribute('contestant-id') === highlighted_contestant_id) {\r\n                    s.classList.add('highlighted')\r\n                    m.classList.add('highlighted')\r\n                }\r\n            })\r\n        })\r\n    \r\n    const highlighted_matches = [...matches_positioner.querySelectorAll('.match-wrapper.highlighted')]\r\n    highlighted_matches.reverse()[0]?.classList.add('last-highlighted')\r\n}","import { MOUSE_ACTIONS_DELAY_AFTER_WINDOW_SCROLL } from '../constants.mjs'\r\nimport { debounce, throttle } from '../utils/utils.mjs'\r\nimport { update_scrollbar } from '../stable_elements/scrollbar.mjs'\r\nimport { update_highlight } from '../effects/highlight.mjs'\r\n\r\n\r\nexport const install_mouse_events = (\r\n    all_data,\r\n    get_option,\r\n    stable_elements,\r\n    navigation\r\n) => {\r\n\r\n    let drag_init_mouse_Y = null\r\n    let drag_init_scrollTop = null\r\n    let scrollbar_is_dragged = false\r\n\r\n    const { the_root_element, content_area, matches_vertical_scroller,\r\n        scrollbar, matches_positioner\r\n    } = stable_elements\r\n\r\n    the_root_element.addEventListener(\r\n        'mouseup',\r\n        e => {\r\n            if (scrollbar_is_dragged) return\r\n            if (e.button !== 0) return\r\n\r\n            if (e.target.classList.contains('navigation-button')) {\r\n                navigation.handle_click(e)\r\n                return\r\n            }\r\n\r\n        // on match click\r\n            if (get_option('onMatchClick') !== null) {\r\n                if (e.target.classList.contains('match-body')) {\r\n                    const match_id = e.target.closest('.match-wrapper')?.getAttribute('match-id')\r\n                    get_option('onMatchClick')(all_data.matches.find(m => m.match_id === match_id))\r\n                }\r\n                return\r\n            }\r\n\r\n        // on side click\r\n            if (get_option('onMatchSideClick') !== null) {\r\n                if (e.target.classList.contains('side-wrapper')) {\r\n                    const match_id = e.target.closest('.match-wrapper')?.getAttribute('match-id')\r\n                    const match = all_data.matches.find(m => m.match_id === match_id)\r\n                    const contestant_id = e.target.getAttribute('contestant-id')\r\n                    const contestant = all_data.contestants[contestant_id]\r\n                    get_option('onMatchSideClick')(contestant, contestant_id, match)\r\n                }\r\n                return\r\n            }\r\n\r\n        // default: highlight team history\r\n            if (!e.target.classList.contains('side-wrapper')) {\r\n                update_highlight(matches_positioner, null)\r\n            } else {\r\n                update_highlight(\r\n                    matches_positioner,\r\n                    e.target.closest('.side-wrapper').getAttribute('contestant-id')\r\n                )\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n\r\n    scrollbar.addEventListener(\r\n        'mousedown',\r\n        e => {\r\n            if (e.button === 0) {\r\n                scrollbar_is_dragged = true\r\n                drag_init_mouse_Y = e.clientY\r\n                drag_init_scrollTop = matches_vertical_scroller.scrollTop\r\n                scrollbar.classList.add('dragged')\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n    window.addEventListener('mouseup', (e) => {\r\n        scrollbar_is_dragged = false\r\n        drag_init_mouse_Y = null\r\n        drag_init_scrollTop = null\r\n        scrollbar.classList.remove('dragged')\r\n    })\r\n\r\n    window.addEventListener(\r\n        'mousemove',\r\n        throttle(e => {\r\n            if (scrollbar_is_dragged) {\r\n                const drag_distance_fraction = (e.clientY - drag_init_mouse_Y) / content_area.clientHeight\r\n                matches_vertical_scroller.scrollTop = drag_init_scrollTop + (drag_distance_fraction * matches_vertical_scroller.scrollHeight)\r\n            }\r\n        }, 15)\r\n    )\r\n     \r\n\r\n\r\n\r\n    const try_forget_window_scroll = debounce(\r\n        () => { matches_vertical_scroller.style.overflowY = 'scroll' },\r\n        MOUSE_ACTIONS_DELAY_AFTER_WINDOW_SCROLL)\r\n    window.addEventListener(\r\n        'scroll',\r\n        () => {\r\n            matches_vertical_scroller.style.overflowY = 'hidden'\r\n            try_forget_window_scroll()\r\n        }\r\n    )\r\n\r\n\r\n\r\n\r\n    matches_vertical_scroller.addEventListener('scroll', () => update_scrollbar(stable_elements))\r\n\r\n    \r\n}\r\n","import { BUTTONS_POSITIONS, default_border_gray } from '../constants.mjs'\r\n\r\nconst GENERAL_OPTIONS = {\r\n\r\n    mainBorderColor: {\r\n        title: 'Main border color',\r\n        type: 'string',\r\n        default_value: default_border_gray\r\n    },\r\n\r\n    rootBackgroundColor: {\r\n        title: 'Root background color',\r\n        type: 'string',\r\n        default_value: '#ffffff'\r\n    },\r\n\r\n    mainVerticalPadding: {\r\n        title: 'Main vertical padding (before first match and after last match)',\r\n        type: 'pixels',\r\n        default_value: 20,\r\n        min_value: 0\r\n    },\r\n\r\n    visibleRoundsCount: {\r\n        title: `How many rounds to display (0 for 'auto', i.e. as much as possible)`,\r\n        type: 'number',\r\n        default_value: 0\r\n    },\r\n\r\n    showScrollbar: {\r\n        title: 'Should show scrollbar',\r\n        type: 'boolean',\r\n        default_value: true\r\n    },\r\n\r\n    scrollbarWidth: {\r\n        title: 'Scrollbar width',\r\n        type: 'pixels',\r\n        default_value: '5',\r\n    },\r\n\r\n    scrollbarColor: {\r\n        title: 'Scrollbar color',\r\n        type: 'string',\r\n        default_value: '#d3d3d3'\r\n    }\r\n}\r\n\r\nexport const ROUND_TITLE_OPTIONS = {\r\n    roundTitlesHeight: {\r\n        title: 'Round titles height',\r\n        type: 'pixels',\r\n        default_value: '50'\r\n    },\r\n\r\n    roundTitlesBorderBottomColor: {\r\n        title: 'Round titles bottom border-color',\r\n        type: 'string',\r\n        default_value: default_border_gray\r\n    },\r\n\r\n    roundTitleColor: {\r\n        title: 'Round title color',\r\n        type: 'string',\r\n        default_value: '#000'\r\n    },\r\n}\r\n\r\nexport const NAVIGATION_OPTIONS = {\r\n    navButtonsPosition: {\r\n        title: 'Navigation (switch rounds) buttons position',\r\n        type: 'select',\r\n        options: [ ...Object.keys(BUTTONS_POSITIONS) ],\r\n        default_value: 'gutters',\r\n        explanation: Object.entries(BUTTONS_POSITIONS).map(\r\n            ([pos_name, pos_title]) => `<span style=\"text-decoration: underline;\">${pos_name}</span>: ${pos_title}`\r\n        ).join('<br />')\r\n    },\r\n\r\n    navigationButtonsTopDistance: {\r\n        title: 'Navigation buttons distance from content top, in any units',\r\n        type: 'string',\r\n        default_value: '50%',\r\n        disable_if: options => options.navButtonsPosition !== 'overMatches',\r\n        explanation: `navigationButtonsTopDistance option takes effect only when navButtonsPosition is set to 'overMatches'`\r\n    },\r\n\r\n    navigationGutterBorderColor: {\r\n        title: 'Navigation gutter border color',\r\n        type: 'string',\r\n        default_value: default_border_gray,\r\n        disable_if: options => options.navButtonsPosition !== 'gutters'\r\n            && options.navButtonsPosition !== 'overTitles'\r\n            && options.navButtonsPosition !== 'beforeTitles',\r\n        explanation: `navigationGutterBorderColor options is applied only when navButtonsPosition is 'gutters' or 'overTitles' or 'beforeTitles'`\r\n    },\r\n\r\n    defaultNavigationSvgSize: {\r\n        title: 'Default navigation arrow size',\r\n        type: 'pixels',\r\n        default_value: '50',\r\n    },\r\n    navigationSvgColor: {\r\n        title: 'Navigation buttons svg color',\r\n        type: 'string',\r\n        default_value:'#161616',\r\n    },\r\n\r\n    leftNavigationButtonBackground: {\r\n        title: 'Left navigation button background',\r\n        type: 'string',\r\n        default_value: 'transparent', // 'linear-gradient(to left, transparent, #fff 50%)',\r\n        explanation: `leftNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'`\r\n    },\r\n\r\n    rightNavigationButtonBackground: {\r\n        title: 'Right navigation button background',\r\n        type: 'string',\r\n        default_value: 'transparent', // 'linear-gradient(to right, transparent, #fff 50%)',\r\n        explanation: `rightNavigationButtonBackground options is applied if navButtonsPosition is 'gutters' or 'overMatches'`\r\n    },\r\n\r\n    leftNavigationButtonHTML: {\r\n        title: 'Inner HTML of LEFT navigation button (<svg> / <img> / whatever)',\r\n        type: 'multiline_string',\r\n        default_value: `\r\n            <svg class=\"default-navigation-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/></svg>\r\n        `,\r\n    },\r\n    rightNavigationButtonHTML: {\r\n        title: 'Inner HTML of RIGHT navigation button (<svg> / <img> / whatever)',\r\n        type: 'multiline_string',\r\n        default_value: `\r\n            <svg class=\"default-navigation-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg>\r\n        `,\r\n    },\r\n}\r\n\r\nexport const CONNECTION_LINES_OPTIONS = {\r\n    connectionLinesWidth: {\r\n        title: 'Connection lines width',\r\n        type: 'pixels',\r\n        default_value: 2,\r\n        min_value: 0,\r\n    },\r\n    connectionLinesColor: {\r\n        title: 'Connection lines color',\r\n        type: 'string',\r\n        default_value: '#dcdcdc'\r\n    },\r\n    highlightedConnectionLinesColor: {\r\n        title: 'Highlighted connection lines color',\r\n        type: 'string',\r\n        default_value: '#7698ff'\r\n    }\r\n}\r\n\r\nexport const MATCH_OPTIONS = {\r\n\r\n    matchMaxWidth: {\r\n        title: 'Max match width',\r\n        type: 'pixels',\r\n        default_value: 450,\r\n        explanation: `Specifying smaller width here will help easy-playoffs draw a greater number of rounds within a given width`\r\n    },\r\n\r\n    matchMinVerticalGap: {\r\n        title: 'Minimal vertical distance between matches',\r\n        type: 'pixels',\r\n        default_value: 25,\r\n        explanation: `Minimal distance means a distance between matches of the leftmost visible round when the visible height isn't enough to contain all matches of this round`\r\n    },\r\n\r\n    matchHorMargin: {\r\n        title: `Matches' horizontal margins`,\r\n        type: 'pixels',\r\n        default_value: '20',\r\n        explanation: `Note that in \"mobile\" (1-round) layout this option will take no effect. Instead a margin of 1.5% will be used`\r\n    },\r\n\r\n    matchAxisMargin: {\r\n        title: `Vertical distance between match axis and each side of a match`,\r\n        type: 'pixels',\r\n        default_value: 4\r\n    },\r\n\r\n    oneSidePlayersGap: {\r\n        title: 'Vertical distance between players of one side of a match (e.g. of tennis doubles)',\r\n        type: 'pixels',\r\n        default_value: 2,\r\n    },\r\n\r\n    liveMatchBorderColor: {\r\n        title: 'Live match border color',\r\n        type: 'string',\r\n        default_value: '#44c985'\r\n    },\r\n\r\n    liveMatchBackgroundColor: {\r\n        title: 'Live match background color',\r\n        type: 'string',\r\n        default_value: 'transparent'\r\n    },\r\n    \r\n    distanceBetweenScorePairs: {\r\n        title: 'Distance between scores (e.g. between sets in tennis)',\r\n        type: 'pixels',\r\n        default_value: 14,\r\n        min_value: 0,\r\n    }\r\n}\r\n\r\nexport const FONTS_OPTIONS = {\r\n    rootFontFamily: {\r\n        title: 'Root font-family (applied to blocks with an \"inherit\" font-family)',\r\n        type: 'string',\r\n        default_value: 'Open Sans, Roboto, sans-serif'\r\n    },\r\n\r\n    roundTitlesFontFamily: {\r\n        title: 'Round titles font-family',\r\n        type: 'string',\r\n        default_value: 'inherit'\r\n    },\r\n\r\n    roundTitlesFontSize: {\r\n        title: 'Round titles font-size',\r\n        type: 'pixels',\r\n        default_value: 30,\r\n        min_value: 8\r\n    },\r\n\r\n\r\n    \r\n    matchTextColor: {\r\n        title: 'Match text color',\r\n        type: 'string',\r\n        default_value: '#000'\r\n    },\r\n    matchFontSize: {\r\n        title: 'Match font-size',\r\n        type: 'pixels',\r\n        default_value: 16,\r\n        min_value: 8,\r\n    },\r\n\r\n    playerTitleFontFamily: {\r\n        title: 'Player title font family',\r\n        type: 'string',\r\n        default_value: 'inherit'\r\n    },\r\n\r\n\r\n    highlightedPlayerTitleColor: {\r\n        title: 'Highlighted player title color',\r\n        type: 'string',\r\n        default_value: '#003ae6',\r\n        explanation: `This color is applied to a players' titles when\r\n            <br />\r\n            1) contestant is under cursor\r\n            <br />\r\n            2) contestant's match history is highlighted`\r\n    },\r\n\r\n    scoreFontFamily: {\r\n        title: 'Score font-family (provide \"inherit\" to use rootFontFamily option)',\r\n        type: 'string',\r\n        default_value: 'inherit'\r\n    },\r\n\r\n\r\n}\r\n\r\nexport const CALLBACKS = {\r\n    onMatchClick: {\r\n        title: 'What happens when a user clicks on a match (JS function)',\r\n        type: 'function_or_null',\r\n        default_value: null,\r\n        explanation: `\r\n            Your function will be called with a data of a match that was clicked.\r\n            <br /><br />\r\n            Example:\r\n            <div class=\"code\">{\r\n    onMatchClick: (match) => {\r\n        location.href = \\`/matches/\\${match.match_id}\\`\r\n    }\r\n}\r\n</div>\r\n<br />\r\nIf you provide this function, contestant's match history will not be highlighted when you click a match's side`\r\n    },\r\n\r\n    onMatchSideClick: {\r\n        title: 'What happens when a user clicks on a side of a match (JS function)',\r\n        type: 'function_or_null',\r\n        default_value: null,\r\n        explanation: `\r\n            Your function will be called with\r\n            <br />\r\n            1) data of a contestant which was clicked,\r\n            <br />\r\n            2) this contestant's id,\r\n            <br />\r\n            3) data of a match within which a side was clicked\r\n            <br />\r\n            <br />\r\n            Example:\r\n            <div class=\"code\">{\r\n    onMatchSideClick: (contestant, contestant_id, match) => {\r\n        location.href = \\`/teams/\\${contestant_id}\\`\r\n    }\r\n}\r\n</div>\r\n            <br />\r\n            <br />\r\n            If you provide this function, it will discard the default behaviour: contestant's match history will not be highlighted when you click a match's side`\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport const OPTIONS = {\r\n    GENERAL_OPTIONS,\r\n    ROUND_TITLE_OPTIONS,\r\n    NAVIGATION_OPTIONS,\r\n    FONTS_OPTIONS,\r\n    CONNECTION_LINES_OPTIONS,\r\n    MATCH_OPTIONS,\r\n    CALLBACKS\r\n}","import { OPTIONS } from './options_meta.mjs'\r\n\r\nexport const get_options_flattened_meta = () => {\r\n    const flattened = {}\r\n    Object.values(OPTIONS).forEach(options_of_kind => Object.assign(flattened, options_of_kind))\r\n    return flattened\r\n}\r\n\r\nexport const get_default_options = () => {\r\n    const default_options = {}\r\n    Object.entries(get_options_flattened_meta())\r\n        .forEach(([option_name, { default_value }]) => {\r\n            default_options[option_name] = default_value\r\n        })\r\n    return default_options\r\n}\r\n\r\nexport const get_option_meta = option_name => get_options_flattened_meta()[option_name]\r\n\r\nexport const get_all_options_names = () => Object.keys(get_options_flattened_meta())","import { get_default_options, get_options_flattened_meta } from './options_meta_getter.mjs'\r\n\r\nlet did_shout = false\r\n\r\nexport const shout_impossible_option_value = (option_name, option_value) => {\r\n    requestAnimationFrame(() => {\r\n        if (did_shout) return\r\n        did_shout = true\r\n        console.warn(\r\n            `Impossible value %c${JSON.stringify(option_value, null, 2)}%c provided for ${option_name} option.`\r\n            + ` Default value of %c${get_default_options()[option_name]}%c will be used instead`,\r\n            'background: pink',\r\n            '',\r\n            'background: #c7ffc9',\r\n            ''\r\n        )\r\n    })\r\n}\r\n\r\nexport const validate_user_options = (user_options) => {\r\n    const all_options_meta = get_options_flattened_meta()\r\n\r\n    Object.entries(user_options).forEach(([option_name, option_value]) => {\r\n\r\n// valid option name?\r\n        const option_meta = all_options_meta[option_name]\r\n        if (!option_meta) {\r\n            console.warn(`Unknown option provided: %c${option_name}`, 'background: pink; font-weight: bold')\r\n            return\r\n        }\r\n    })\r\n}","const failed_img_srcs = []\r\n\r\nexport const add_flags_listeners = round_el => {\r\n    round_el.querySelectorAll('img.player-flag').forEach(image => {\r\n        image.addEventListener('error', on_image_err)\r\n        image.addEventListener('load', on_image_load)\r\n    })\r\n}\r\n\r\nexport const get_failed_img_srcs = () => [ ...failed_img_srcs ]\r\n\r\nfunction on_image_err() {\r\n    if (!failed_img_srcs.includes(this.src)) {\r\n        failed_img_srcs.push(this.src)\r\n    }\r\n    this.removeEventListener('error', on_image_err)\r\n    this.removeEventListener('load', on_image_load)\r\n    this.remove()\r\n}\r\n\r\nfunction on_image_load() {\r\n    this.removeEventListener('error', on_image_err)\r\n    this.removeEventListener('load', on_image_load)\r\n}","import { get_failed_img_srcs } from './flags.mjs'\r\n\r\n\r\nconst maybe_get_nationality = (player, all_data) => { // => div.nationality or empty string\r\n    if (!all_data.have_nationalities) return ''\r\n    \r\n    let content = ''\r\n\r\n    if (player.nationality_code) {\r\n        content = player.nationality_code\r\n    }\r\n\r\n    if (player.flag_url && !get_failed_img_srcs().includes(player.flag_url)) {\r\n        content = `<img class=\"player-flag\" src=\"${player.flag_url}\" loading=lazy />`\r\n    }\r\n    \r\n    return `<div class=\"nationality\">${ content }</div>`\r\n}\r\n\r\n\r\n\r\nconst get_player_el = (pl, all_data) => `<div class=\"player-wrapper\">\r\n    ${ maybe_get_nationality(pl, all_data)}\r\n    <div class=\"player-title\">${ pl.title }</div>\r\n</div>`\r\n\r\n\r\n\r\nconst get_side_content = (side, other_side, all_data) => {\r\n    let content = ''\r\n\r\n    let contestant = all_data.contestants[side.contestant_id]\r\n\r\n    if (!contestant) return ''\r\n\r\n    if (all_data.have_entry_statuses) {\r\n        content += `<div class=\"side-info-item entry-status\">${contestant.entry_status || ''}</div>`\r\n    }\r\n\r\n    content += `<div class=\"side-info-item players-info\">\r\n        ${ contestant.players.map(pl => get_player_el(pl, all_data)).join('') }\r\n    </div>`\r\n\r\n    if (side.is_winner) {\r\n        content += `<div class=\"side-info-item winner-mark\">\r\n            <svg class=\"default-winner-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path xmlns=\"http://www.w3.org/2000/svg\" d=\"M21 6.285l-11.16 12.733-6.84-6.018 1.319-1.49 5.341 4.686 9.865-11.196 1.475 1.285z\"/></svg>\r\n        </div>`\r\n    }\r\n\r\n    if (Array.isArray(side.score)) {\r\n        content += `<div class=\"side-info-item score\">\r\n            ${ side.score.map((sc, i) => {\r\n                let is_winner = sc.is_winner\r\n                if (is_winner === undefined) {\r\n                    is_winner = !!side.is_winner\r\n                }\r\n                return `<div class=\"single-score ${is_winner ? 'winner' : ''}\">\r\n                    <div class=\"side-own-score\">\r\n                        <span class=\"main-score\">${ sc.main_score }</span>\r\n                        ${ typeof sc.tie_break === 'number' ? `<span class=\"tie-break\">${ sc.tie_break }</span>` : '' }\r\n                    </div>\r\n                    <span class=\"other-side-score\"> <!-- this block is for horizontal alignment between two sides' scores -->\r\n                        <span class=\"main-score\">${ other_side?.score[i].main_score }</span>\r\n                        ${ typeof other_side?.score[i].tie_break === 'number' ? `<span class=\"tie-break\">${ other_side?.score[i].tie_break }</span>` : '' }\r\n                    </span>\r\n                </div>`\r\n            }).join('') }\r\n        </div>`\r\n    }\r\n\r\n    if (side.subscore) {\r\n        content += `<div class=\"side-info-item subscore\">${ side.subscore }</div>`\r\n    }\r\n\r\n    if (other_side?.is_serving) {\r\n        content += '<div class=\"side-info-item serving-mark transparent\"></div>'\r\n    } else if (side.is_serving) {\r\n        content += '<div class=\"side-info-item serving-mark\"></div>'\r\n    }\r\n\r\n    return content\r\n}\r\n\r\n\r\n\r\nconst get_side_el = (side, other_side, all_data) => {\r\n    return `<div class=\"side-wrapper\r\n            ${side === undefined || all_data.contestants[side?.contestant_id] === undefined ? 'empty-side' : ''}\r\n            ${other_side?.is_winner ? 'looser' : ''}\r\n            ${side?.is_winner ? 'winner' : ''}\r\n        \"\r\n        ${side ? ` contestant-id=\"${ side.contestant_id }\"` : ''}\r\n    >\r\n        ${ side ? get_side_content(side, other_side, all_data) : '' }\r\n    </div>`\r\n}\r\n\r\n\r\n\r\nexport const get_match_element = (match_data, all_data) => {\r\n    if (match_data === undefined) {\r\n        return `<div class=\"match-wrapper missing-match-placeholder\">\r\n            ${ get_side_el(null, null, all_data) }\r\n            ${ get_side_el(null, null, all_data) }\r\n            <div class=\"match-lines-area\">\r\n                <div class=\"line-wrapper upper\"></div>\r\n                <div class=\"line-wrapper lower\"></div>\r\n            </div>\r\n        </div>`\r\n    }\r\n\r\n    let status_html = ''\r\n    const have_score = match_data.sides.find(side => Array.isArray(side.score) && side.score.length)\r\n    if (!have_score && match_data.match_status) {\r\n        status_html = `<div class=\"match-status\">${match_data.match_status}</div>`\r\n    }\r\n\r\n    return `<div class=\"match-wrapper ${ match_data.is_live ? 'live' : ''}\" match-id=\"${match_data.match_id}\">\r\n        <div class=\"match-body\">\r\n            <div class=\"sides\">\r\n                ${ get_side_el(match_data.sides[0], match_data.sides[1], all_data) }\r\n                ${ get_side_el(match_data.sides[1], match_data.sides[0], all_data) }\r\n            </div>\r\n            ${status_html}\r\n        </div>\r\n        <div class=\"match-lines-area\">\r\n            <div class=\"line-wrapper upper\"></div>\r\n            <div class=\"line-wrapper lower\"></div>\r\n        </div>\r\n    </div>`\r\n}","import { get_round_element } from './get_round_element.mjs'\r\n\r\nexport const create_matches = (all_data, els) => {\r\n    const round_elements = []\r\n    all_data.rounds.forEach((round, round_index) => {\r\n        round_elements.push(\r\n            get_round_element(all_data, round.id, round_index)\r\n        )\r\n    })\r\n    els.matches_positioner.append(...round_elements)\r\n}\r\n","import { create_element_from_Html, get_n_things } from '../utils/utils.mjs'\r\nimport { add_flags_listeners } from './flags.mjs'\r\nimport { get_match_element } from './get_match_element.mjs'\r\n\r\n\r\nexport const get_round_element = (all_data, round_id, round_index) => {\r\n    const match_count = Math.pow(2, all_data.rounds.length - 1 - round_index)\r\n\r\n    const round_el = create_element_from_Html(`\r\n        <div class=\"round-wrapper\" round-id=\"${round_id}\">\r\n            ${\r\n                get_n_things(\r\n                    match_count,\r\n                    (_, match_index) => get_match_element(\r\n                        all_data.matches.find(m => m.round_id === round_id && m.order === match_index),\r\n                        all_data\r\n                    )\r\n                ).join('')\r\n            }\r\n            \r\n            ${round_index === 0 ? `<div class=\"round-fake-padding left\"></div>` : ''}\r\n            ${round_index === (all_data.rounds.length - 1) ? `<div class=\"round-fake-padding right\"></div>` : ''}\r\n\r\n        </div>\r\n    `)\r\n\r\n    add_flags_listeners(round_el)\r\n\r\n    return round_el\r\n}\r\n","import { handle_data_errors } from './data/handle_errors.mjs'\r\nimport { ananlyze_data } from './data/analyze_data.mjs'\r\nimport { validate_matches } from './data/validate_matches.mjs'\r\nimport { get_permanent_drawing_props } from './data/permanent_drawing_props.mjs'\r\nimport { observe_resize_later, create_unique_id, deep_clone_object, create_element_from_Html } from './utils/utils.mjs'\r\nimport { create_stable_elements } from './stable_elements/create_stable_elements.mjs'\r\nimport { install_mouse_events } from './mouse_events/mouse_events.mjs'\r\nimport { create_options_dealer } from './options/create_options_dealer.mjs'\r\nimport { validate_user_options } from './options/validate_user_options.mjs'\r\nimport { create_navigation } from './navigation/navigation.mjs'\r\nimport { update_all_styles } from './styles/update_all_styles.mjs'\r\nimport { create_matches } from './draw/create_matches.mjs'\r\nimport { get_match_element } from './draw/get_match_element.mjs'\r\n\r\nconst apply_new_options = (\r\n    new_options,\r\n    options_dealer,\r\n    all_data,\r\n    stable_elements\r\n) => {\r\n    validate_user_options(new_options)\r\n    options_dealer.update_user_options(new_options)\r\n\r\n    stable_elements.the_root_element.querySelectorAll('.navigation-button.left')\r\n        .forEach(b => b.innerHTML = options_dealer.get_final_value('leftNavigationButtonHTML'))\r\n    stable_elements.the_root_element.querySelectorAll('.navigation-button.right')\r\n        .forEach(b => b.innerHTML = options_dealer.get_final_value('rightNavigationButtonHTML'))\r\n\r\n    stable_elements.scrollbar.style.display = options_dealer.get_final_value('showScrollbar') ? 'block' : 'none'\r\n\r\n    update_all_styles(all_data.root_id, options_dealer.get_final_value)\r\n}\r\n\r\n\r\nconst try_merge_new_data = (new_data, old_data) => {\r\n    const user_data = deep_clone_object(new_data)\r\n    const { have_critical_error } = handle_data_errors(ananlyze_data(user_data))\r\n    if (have_critical_error) return false\r\n\r\n    Object.assign(old_data, get_permanent_drawing_props(user_data))\r\n    return true\r\n}\r\n\r\n\r\nexport const createPlayoffs = (user_data, user_wrapper_el, user_options) => {\r\n    const options_dealer = create_options_dealer()\r\n    const all_data = { root_id: create_unique_id() }\r\n\r\n    const merge_succeeded = try_merge_new_data(user_data, all_data)\r\n    if (!merge_succeeded) {\r\n        return { moveToPreviousRound: () => void 0, moveToNextRound: () => void 0, getNavigationState: () => void 0, applyNewOptions: () => void 0, applyMatchesUpdates: () => void 0 }\r\n    }\r\n\r\n    const stable_elements = create_stable_elements(user_wrapper_el, all_data)\r\n\r\n    apply_new_options(user_options, options_dealer, all_data, stable_elements)\r\n\r\n    create_matches(all_data, stable_elements)\r\n\r\n    if (stable_elements.matches_positioner.firstElementChild === null) return\r\n\r\n    const navigation = create_navigation(all_data.root_id, options_dealer.get_final_value)\r\n\r\n\r\n\r\n    observe_resize_later(user_wrapper_el, navigation.repaint)\r\n\r\n    install_mouse_events(\r\n        all_data,\r\n        options_dealer.get_final_value,\r\n        stable_elements,\r\n        navigation\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// expose stuff\r\n    return {\r\n        moveToPreviousRound: navigation.move_left,\r\n\r\n        moveToNextRound: navigation.move_right,\r\n\r\n        setBaseRoundIndex: navigation.set_base_round_index,\r\n\r\n        getNavigationState: navigation.get_state,\r\n\r\n        applyNewOptions: (new_options) => {\r\n            apply_new_options(new_options, options_dealer, all_data, stable_elements)\r\n            navigation.apply_options()\r\n        },\r\n\r\n        applyFullDataUpdate: (new_data) => {\r\n            const merge_succeeded = try_merge_new_data(new_data, all_data)\r\n            if (!merge_succeeded) {\r\n                console.warn('Failed to apply new data')\r\n                return\r\n            }\r\n\r\n            const scroll_top = stable_elements.matches_vertical_scroller.scrollTop\r\n            stable_elements.matches_positioner.innerHTML = ''\r\n            create_matches(all_data, stable_elements)\r\n            navigation.repaint()\r\n            stable_elements.matches_vertical_scroller.scrollTop = scroll_top\r\n        },\r\n\r\n        applyMatchesUpdates: (matches_data) => {\r\n\r\n            const { have_errors } = handle_data_errors(validate_matches(matches_data, all_data.contestants))\r\n            if (have_errors) return\r\n\r\n            matches_data.forEach(m => {\r\n                const el = document.querySelector(\r\n                    `#${all_data.root_id} .round-wrapper[round-id=\"${m.round_id}\"] .match-wrapper:nth-child(${m.order + 1})`\r\n                )\r\n                if (!el) return\r\n                el.replaceWith(\r\n                    create_element_from_Html(get_match_element(m, all_data))\r\n                )\r\n\r\n                const m_i = all_data.matches.findIndex(old_match => old_match.match_id === m.match_id)\r\n                if (m_i === -1) {\r\n                    all_data.matches.push(m)\r\n                } else {\r\n                    all_data.matches[m_i] = m\r\n                }\r\n            })\r\n        },\r\n\r\n        getAllData: () => deep_clone_object(all_data),\r\n\r\n        getUserOptions: options_dealer.get_user_options\r\n    }\r\n}\r\n","import { update_styles } from '../utils/utils.mjs'\r\nimport { get_rounds_styles } from './round_styles.mjs'\r\nimport { get_general_styles } from './general_styles.mjs'\r\nimport { get_buttons_styles } from './buttons_styles.mjs'\r\nimport { get_mobile_styles } from './mobile_styles.mjs'\r\n\r\nexport const update_all_styles = (root_id, get_option) => {\r\n    update_styles(root_id, 'general-styles', get_general_styles(root_id, get_option))\r\n    update_styles(root_id, 'buttons-styles', get_buttons_styles(root_id, get_option))\r\n    update_styles(root_id, 'rounds-styles', get_rounds_styles(root_id, get_option))\r\n    update_styles(root_id, 'mobile-styles', get_mobile_styles(root_id))\r\n}\r\n","export const get_general_styles = (root_id, get_option) => `\r\n\r\n    #${root_id}.root-brackets-element {\r\n        background-color: ${ get_option('rootBackgroundColor') };\r\n        overflow: hidden;\r\n        position: relative;\r\n        width: 100%;\r\n        min-width: 300px;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: left;\r\n        border: 1px solid ${get_option('mainBorderColor')};\r\n    }\r\n    \r\n    #${root_id} .all-but-buttons-header {\r\n        flex: 1;\r\n        display: flex;\r\n        height: 100%;\r\n    }\r\n\r\n    /* protection against external styles */\r\n    #${root_id}, #${root_id} * {\r\n        box-sizing: border-box;\r\n        user-select: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        width: auto;\r\n        height: auto;\r\n        border: none;\r\n        border-radius: 0;\r\n        align-content: unset;\r\n        align-items: unset;\r\n        align-self: unset;\r\n        bottom: unset;\r\n        top: unset;\r\n        left: unset;\r\n        right: unset;\r\n        box-shadow: none;\r\n        outline: none;\r\n        text-decoration: none;\r\n        white-space: initial;\r\n        line-height: initial;\r\n    }\r\n\r\n    #${root_id} .zero-width {\r\n        width: 0;\r\n    }\r\n\r\n    #${root_id} .with-hidden-scrollbar {\r\n        scrollbar-width: none; /* For Firefox */\r\n        -ms-overflow-style: none; /* For Internet Explorer and Edge */\r\n    }\r\n\r\n    #${root_id} .with-hidden-scrollbar::-webkit-scrollbar {\r\n        width: 0px; /* For Chrome, Safari, and Opera */\r\n    }\r\n\r\n    #${root_id} .full-width-grid-column { /* (a column that takes full width of the parent grid el) */\r\n        grid-column: 1 / -1;\r\n    }\r\n\r\n    #${root_id} .equal-width-columns-grid { /* all columns acquire the width of the widest column */\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        grid-auto-columns: minmax(0, 1fr);\r\n    }\r\n\r\n    \r\n    \r\n    #${root_id} .round-titles-wrapper {\r\n        width: 100%;\r\n        display: grid;\r\n        height: ${ get_option('roundTitlesHeight') }px;\r\n        font-size: ${ get_option('roundTitlesFontSize') }px;\r\n        font-family: ${ get_option('roundTitlesFontFamily') || get_option('rootFontFamily') };\r\n        color: ${ get_option('roundTitleColor') };\r\n        border-bottom: 1px solid ${ get_option('roundTitlesBorderBottomColor') };\r\n        padding-right: 1000px; /* otherwise the border-bottom stopped too early */\r\n        box-sizing: content-box;\r\n    }\r\n\r\n    #${root_id} .round-title {\r\n        display: flex;\r\n        align-items: center;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        justify-content: center;\r\n    }\r\n    #${root_id} .round-title.hidden {\r\n        display: none;\r\n    }\r\n\r\n    #${root_id} .matches-vertical-scroller {\r\n        flex: 1;\r\n        position: relative;\r\n        overflow-y: scroll;\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    #${root_id} .matches-positioner {\r\n        position: relative;\r\n        display: grid;\r\n        grid-template-rows: 100%;\r\n        overflow: hidden;\r\n        min-height: calc(100% - ${get_option('mainVerticalPadding') * 2}px);\r\n        margin-top: ${ get_option('mainVerticalPadding') || 0 }px;\r\n        margin-bottom: ${ get_option('mainVerticalPadding') || 0 }px;\r\n        font-size: ${get_option('matchFontSize')}px;\r\n        width: 100%;\r\n    }\r\n\r\n    #${root_id} .content-area {\r\n        height: 100%;\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        min-width: 0; /* to make it shrink to the free width of the parent */\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n\r\n    #${root_id} .scrollbar {\r\n        position: absolute;\r\n        z-index: 2;\r\n        right: 0;\r\n        width: ${ get_option('scrollbarWidth') }px;\r\n        background: ${ get_option('scrollbarColor') };\r\n        opacity: 0.7;\r\n    }\r\n    #${root_id} .scrollbar:hover, #${root_id} .scrollbar.dragged {\r\n        opacity: 1;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*  layout to measure rounds' natural width (where they aren't constrained by 100% and flex and grid stuff) */\r\n    #${root_id}.root-brackets-element.free-layout .round-wrapper.hidden {\r\n        display: grid; /* (instead of 'none') */\r\n    }    \r\n    #${root_id}.root-brackets-element.free-layout .matches-positioner {\r\n        width: max-content;\r\n    }\r\n`","export const get_buttons_styles = (root_id, get_option) => {\r\n\r\n    const buttons_are_gutters = get_option('navButtonsPosition') === 'gutters'\r\n    const buttons_are_before_titles = get_option('navButtonsPosition') === 'beforeTitles'\r\n    const buttons_are_over_titles = get_option('navButtonsPosition') === 'overTitles'\r\n    const buttons_are_hidden = get_option('navButtonsPosition') === 'hidden'\r\n\r\n    return `\r\n\r\n\r\n        #${root_id} .buttons-header {\r\n            display: ${buttons_are_before_titles || buttons_are_over_titles ? 'flex' : 'none'};\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            border-bottom: 1px solid ${get_option('navigationGutterBorderColor')};\r\n            ${\r\n                buttons_are_over_titles\r\n                ? `\r\n                    position: absolute;\r\n                    z-index: 1;\r\n                    left: 0;\r\n                    right: 0;\r\n                    height: ${parseInt(get_option('roundTitlesHeight')) + 1}px;\r\n                `\r\n                : ''\r\n            }\r\n        }\r\n\r\n        #${root_id} .buttons-header .navigation-button {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        #${root_id} .navigation-button {\r\n            max-height: 100%;\r\n        }\r\n\r\n        #${root_id} .navigation-button.non-header-button {\r\n            cursor: auto;\r\n            user-select: none;\r\n            z-index: 2;\r\n            display: ${ buttons_are_hidden || buttons_are_before_titles || buttons_are_over_titles ? 'none' : 'flex' };\r\n            position: ${ buttons_are_gutters ? 'static' : 'absolute' };\r\n            top: ${ get_option('navigationButtonsTopDistance') };\r\n            transform: ${ buttons_are_gutters ? 'none' : 'translate(0, -50%)' };\r\n            min-height: ${ buttons_are_gutters ? '100%' : '0' }px;\r\n        }\r\n\r\n\r\n        #${root_id} .navigation-button.non-header-button {\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        #${root_id} .navigation-button.non-header-button.left {\r\n            left: 0;\r\n            background: ${ get_option('leftNavigationButtonBackground') };\r\n            border-right: ${ buttons_are_gutters ? `1px solid ${get_option('navigationGutterBorderColor')}` : 'none' };\r\n        }\r\n        #${root_id} .navigation-button.non-header-button.right {\r\n            right: 0;\r\n            background: ${ get_option('rightNavigationButtonBackground') };\r\n            border-left: ${ buttons_are_gutters ? `1px solid ${get_option('navigationGutterBorderColor')}` : 'none' };\r\n        }\r\n        #${root_id} .navigation-button svg {\r\n            fill: ${ get_option('navigationSvgColor') };\r\n        }\r\n           \r\n        #${root_id} .navigation-button.hidden {\r\n            visibility: hidden;\r\n        }\r\n\r\n        #${root_id} .navigation-button.active {\r\n            cursor: pointer;\r\n        }\r\n\r\n        #${root_id} .navigation-button > * {\r\n            transition: opacity ease-in-out 0.2s;\r\n            opacity: 0.15;\r\n            pointer-events: none;\r\n        }\r\n\r\n        #${root_id} .navigation-button.active > * {\r\n            opacity: 0.65;\r\n        }\r\n\r\n        #${root_id} .navigation-button.active:hover > * {\r\n            opacity: 1;\r\n        }\r\n\r\n        #${root_id} .default-navigation-svg {\r\n            height: auto;\r\n            padding: ${get_option('defaultNavigationSvgSize') / 6}px ${get_option('defaultNavigationSvgSize') / 8}px;\r\n            width: ${ get_option('defaultNavigationSvgSize') }px;\r\n        }\r\n    `\r\n}","export const get_rounds_styles = (root_id, get_option) => `\r\n    #${root_id} {\r\n        font-family: ${get_option('rootFontFamily')};\r\n    }\r\n\r\n    #${root_id} .round-wrapper {\r\n        position: relative;\r\n        display: grid;\r\n        grid-auto-rows: minmax(0, 1fr);\r\n        align-items: stretch;\r\n        min-width: 100px;\r\n        max-width: 100%;\r\n    }\r\n\r\n    #${root_id} .round-wrapper.hidden {\r\n        display: none;\r\n    }\r\n\r\n\r\n\r\n\r\n    #${root_id} .round-fake-padding {\r\n        position: absolute;\r\n        z-index: 2;\r\n        top: 0;\r\n        bottom: 0;\r\n        width: ${get_option('matchHorMargin')}px;\r\n        background: ${get_option('rootBackgroundColor')};\r\n    }\r\n    #${root_id} .round-fake-padding.left {\r\n        left: 0;\r\n    }\r\n    #${root_id} .round-fake-padding.right {\r\n        right: 0;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    #${root_id} .match-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        position: relative;\r\n        min-height: 40px;\r\n        padding-top: ${get_option('matchMinVerticalGap') / 2}px;\r\n        padding-bottom: ${get_option('matchMinVerticalGap') / 2}px;\r\n        padding-left: ${get_option('matchHorMargin')}px;\r\n        padding-right: ${get_option('matchHorMargin')}px;\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n\r\n\r\n    #${root_id} .round-wrapper .match-body {\r\n        width: 100%;\r\n        transition: background-color 0.1s ease-out;\r\n        display: flex;\r\n        max-width: ${get_option('matchMaxWidth')}px;\r\n    }\r\n\r\n    #${root_id} .match-body .sides {\r\n        flex: 1;\r\n        display: grid;\r\n        grid-template-rows: minmax(0, 1fr) minmax(0, 1fr); /* two sides will always be of same height */\r\n        grid-template-columns: minmax(0, 1fr);\r\n        border: ${get_option('connectionLinesWidth')}px solid transparent;\r\n    }\r\n\r\n    #${root_id} .match-body .match-status {\r\n        font-size: ${Math.floor(get_option('matchFontSize') * 0.85)}px;\r\n        background: ${get_option('rootBackgroundColor')};\r\n        z-index: 2;\r\n        border: ${get_option('connectionLinesWidth')}px solid ${get_option('connectionLinesColor')};\r\n        padding: 2px 6px;\r\n        align-self: center;\r\n        margin-right: 2%;\r\n    }\r\n\r\n    #${root_id} .match-wrapper.highlighted .match-body .match-status {\r\n        border-color: ${get_option('highlightedConnectionLinesColor')};\r\n    }\r\n\r\n    ${get_option('onMatchClick')\r\n        ? `\r\n            #${root_id} .match-body {\r\n                cursor: pointer;\r\n            }\r\n            #${root_id} .match-body * {\r\n                pointer-events: none; /* handle click/hover only on whole body */\r\n            }\r\n            #${root_id} .match-body:hover {\r\n                background-color: rgb(250, 250, 250);\r\n            }\r\n            #${root_id} .match-body:hover .player-title {\r\n                color: ${get_option('highlightedPlayerTitleColor')};\r\n            }\r\n        `\r\n        : ''\r\n    }\r\n\r\n\r\n\r\n\r\n    #${root_id} .match-wrapper.missing-match-placeholder {\r\n        pointer-events: none;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n/* LINES */\r\n\r\n/* regular lines */\r\n    #${root_id} .match-wrapper .match-lines-area {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        pointer-events: none;\r\n        z-index: 1;\r\n    }\r\n    #${root_id} .match-wrapper .match-lines-area .line-wrapper {\r\n        flex: 1; /* each of 2 empty guys takes 50% height */\r\n        color: ${get_option('connectionLinesColor')}; /* for box-shadow color, not text */\r\n        transition: color 0.1s ease-out, border-color 0.1s ease-out;\r\n    }\r\n\r\n\r\n    #${root_id} .match-wrapper.highlighted .match-lines-area .line-wrapper {\r\n        color: ${get_option('highlightedConnectionLinesColor')}; /* for box-shadow color, not text */\r\n    }\r\n\r\n    #${root_id} .match-wrapper:nth-child(even) .line-wrapper.upper {\r\n        box-shadow: ${get_option('connectionLinesWidth')}px 0px 0px 0px;\r\n        border-bottom: ${get_option('connectionLinesWidth')}px solid ${get_option('connectionLinesColor')};\r\n    }\r\n    #${root_id} .match-wrapper:nth-child(odd) .line-wrapper.lower {\r\n        box-shadow: ${get_option('connectionLinesWidth')}px 0px 0px 0px;\r\n        border-top: ${get_option('connectionLinesWidth')}px solid ${get_option('connectionLinesColor')};\r\n    }\r\n    #${root_id} .round-wrapper:last-of-type .line-wrapper {\r\n        box-shadow: none !important;\r\n    }\r\n/* highlighted lines */\r\n    #${root_id} .match-wrapper.highlighted .line-wrapper {\r\n        border-color: ${get_option('highlightedConnectionLinesColor')} !important;\r\n    }\r\n    #${root_id} .match-wrapper.last-highlighted .line-wrapper {\r\n        color: ${get_option('connectionLinesColor')} !important;\r\n    }\r\n\r\n\r\n    #${root_id} .side-wrapper.highlighted .players-info,\r\n    #${root_id} .side-wrapper:hover .player-title {\r\n        color: ${get_option('highlightedPlayerTitleColor')};\r\n    }\r\n\r\n    #${root_id} .side-wrapper {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        padding-top: ${get_option('matchAxisMargin')}px;\r\n        padding-bottom: ${get_option('matchAxisMargin')}px;\r\n        padding-right: ${Math.floor(get_option('matchFontSize') / 3 * 2)}px;\r\n        padding-left: ${Math.floor(get_option('matchFontSize') / 2)}px;\r\n        color: ${get_option('matchTextColor')}; /* difined at this depth because on upper levels color property is used for box-shadow tricks */\r\n    }\r\n\r\n    #${root_id} .side-wrapper.empty-side {\r\n        pointer-events: none;\r\n    }\r\n\r\n    #${root_id} .side-wrapper:last-of-type {\r\n        margin-top: -${get_option('connectionLinesWidth')}px;\r\n        padding-top: ${get_option('matchAxisMargin') + get_option('connectionLinesWidth')}px;\r\n    }\r\n\r\n    #${root_id} .match-wrapper.live .match-body .sides {\r\n        border-color: ${get_option('liveMatchBorderColor')};\r\n        background-color: ${get_option('liveMatchBackgroundColor')};\r\n    }\r\n\r\n\r\n\r\n\r\n    #${root_id} .side-info-item {\r\n        display: grid;\r\n        grid-auto-rows: minmax(0, 1fr); /* equal height rows */\r\n        grid-template-columns: auto;\r\n        align-items: center;\r\n        pointer-events: none; /* to capture clicks on .side-wrapper */\r\n    }\r\n\r\n    #${root_id} .side-info-item.entry-status {\r\n        width: ${get_option('matchFontSize') * 1.5}px;\r\n        font-size: ${get_option('matchFontSize') - 4}px;\r\n        text-align: center;\r\n    }\r\n\r\n    #${root_id} .side-info-item.players-info {\r\n        grid-row-gap: ${get_option('oneSidePlayersGap')}px;\r\n        flex: 1;\r\n        padding-left: ${get_option('matchFontSize') / 3 * 2}px;\r\n        min-width: 0;\r\n    }\r\n\r\n    #${root_id} .player-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        min-width: 0;\r\n    }\r\n\r\n    #${root_id} .player-wrapper .nationality {\r\n        width: ${get_option('matchFontSize') * 1.7}px;\r\n        font-size: ${get_option('matchFontSize') - 4}px;\r\n        text-align: center;\r\n        margin-right: ${get_option('matchFontSize') / 2}px;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-shrink: 0;\r\n    }\r\n\r\n    #${root_id} .player-wrapper .nationality > img {\r\n        max-height: ${get_option('matchFontSize')}px;\r\n    }\r\n\r\n    #${root_id} .player-wrapper .player-title {\r\n        flex: 1;\r\n        padding-right: ${get_option('matchFontSize') * 1.5}px;\r\n        font-family: ${get_option('playerTitleFontFamily') || get_option('rootFontFamily')};\r\n        transition: color 0.1s ease-out, opacity 0.1s ease-out;\r\n        white-space: nowrap;\r\n        text-align: left;\r\n    }\r\n\r\n    #${root_id} .side-wrapper.looser:not(.highlighted) .player-title,\r\n    #${root_id} .side-wrapper .single-score:not(.winner) {\r\n        opacity: 0.54;\r\n    }\r\n    \r\n    #${root_id} .side-info-item.winner-mark {\r\n        padding-right: ${get_option('distanceBetweenScorePairs')}px;\r\n    }\r\n\r\n    #${root_id} .side-info-item.serving-mark {\r\n        border-radius: 50%;\r\n        background-color: #b7cf15;\r\n        width: ${get_option('matchFontSize') / 2.5}px;\r\n        height: ${get_option('matchFontSize') / 2.5}px;\r\n        margin-left: ${get_option('matchFontSize') / 2}px;\r\n    }\r\n\r\n    #${root_id} .side-info-item.serving-mark.transparent {\r\n        background-color: transparent;\r\n    }\r\n\r\n    #${root_id} .side-info-item.score {\r\n        grid-auto-flow: column;\r\n        font-family: ${get_option('scoreFontFamily') || get_option('rootFontFamily')};\r\n        grid-column-gap: ${get_option('distanceBetweenScorePairs')}px;\r\n    }\r\n    #${root_id} .single-score {\r\n        display: flex;\r\n        overflow: visible;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    #${root_id} .tie-break {\r\n        font-size: ${Math.floor(get_option('matchFontSize') / 3 * 2)}px;\r\n        padding-left: 1px;\r\n        margin-top: -${Math.floor(get_option('matchFontSize') / 5)}px;\r\n        margin-right: -${Math.floor(get_option('matchFontSize') / 5)}px;\r\n    }\r\n\r\n    #${root_id} .single-score .side-own-score {\r\n        display: flex;\r\n    }\r\n\r\n    #${root_id} .single-score .other-side-score {\r\n        display: flex;\r\n        height: 1px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    #${root_id} .side-info-item.subscore {\r\n        min-width: ${get_option('matchFontSize') * 2}px;\r\n        text-align: center;\r\n        border: 1px solid ${get_option('matchTextColor')};\r\n        padding: 0 ${get_option('matchFontSize') / 4}px;\r\n        margin-left: ${get_option('matchFontSize') / 2}px;\r\n    }\r\n\r\n    #${root_id} .match-wrapper.live .side-info-item.subscore {\r\n        border-color: #c4c4c4;\r\n    }\r\n\r\n    #${root_id} svg.default-winner-svg {\r\n        height: ${get_option('matchFontSize')}px;\r\n        width: auto;\r\n    }\r\n`","export const get_mobile_styles = (root_id) => `\r\n    #${root_id}.mobile .round-wrapper .match-wrapper {\r\n        padding-left: 1.5%;\r\n        padding-right: 1.5%;\r\n    }\r\n\r\n    #${root_id}.mobile .round-fake-padding {\r\n        display: none;\r\n    }\r\n\r\n    #${root_id}.mobile .match-body .sides {\r\n        width: 100%;\r\n    }\r\n\r\n`\r\n","import { is_object } from '../utils/utils.mjs'\r\nimport { validate_matches } from './validate_matches.mjs'\r\n\r\n\r\nexport const ananlyze_data = (all_data) => {\r\n    const all_errors = []\r\n\r\n// rounds\r\n    if (!Array.isArray(all_data.rounds)) {\r\n        all_errors.push({\r\n            is_critical: true,\r\n            message: 'Expected an array of rounds, instead got: ',\r\n            data: all_data.rounds\r\n        })\r\n\r\n    }\r\n\r\n    all_data.rounds && all_data.rounds.length && all_data.rounds.forEach(round => {\r\n        if (!is_object(round)) {\r\n            all_errors.push({\r\n                is_critical: true,\r\n                message: 'Round must be an object, instead got: ',\r\n                data: round\r\n            })\r\n        }\r\n\r\n\r\n        if (round.id === undefined) {\r\n            all_errors.push({\r\n                is_critical: true,\r\n                message: 'Round must have an id: ',\r\n                data: round\r\n            })\r\n        } else if (typeof round.id !== 'string') {\r\n            all_errors.push({\r\n                is_critical: true,\r\n                message: 'Round id must be a string: ',\r\n                data: round\r\n            })\r\n        }\r\n\r\n        if (round.name === undefined) {\r\n            all_errors.push({\r\n                is_critical: false,\r\n                message: 'Please provide a name for a round: ',\r\n                data: round\r\n            })\r\n        } else if (typeof round.name !== 'string') {\r\n            all_errors.push({\r\n                is_critical: false,\r\n                message: 'round.name must be a string: ',\r\n                data: round\r\n            })\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n// matches\r\n    const matches_errors = validate_matches(all_data.matches, all_data.contestants)\r\n    all_errors.push(...matches_errors)\r\n\r\n\r\n\r\n// contestants\r\n    if (!is_object(all_data.contestants)) {\r\n        all_errors.push({\r\n            is_critical: false,\r\n            message: 'data.contestants must be an object which maps ids to contestants, instead got: ',\r\n            data: all_data.contestants\r\n        })\r\n    }\r\n\r\n    Object.values(all_data.contestants).forEach((contestant) => {\r\n        if (!is_object(contestant)) {\r\n            all_errors.push({\r\n                is_critical: true,\r\n                message: 'Contestant must be an object, instead got: ',\r\n                data: contestant\r\n            })\r\n        }\r\n\r\n        if (typeof contestant.entry_status !== 'undefined' && typeof contestant.entry_status !== 'string') {\r\n            all_errors.push({\r\n                is_critical: false,\r\n                message: 'If entry_status is provided for a contestant, it must be a string: ',\r\n                data: contestant\r\n            })\r\n        }\r\n\r\n        if (!Array.isArray(contestant.players)) {\r\n            all_errors.push({\r\n                is_critical: true,\r\n                message: 'Array of players must be provided for a contestant: ',\r\n                data: contestant\r\n            })\r\n        } else if (contestant.players.length === 0) {\r\n            all_errors.push({\r\n                is_critical: false,\r\n                message: 'contestant.players must contain at least one element: ',\r\n                data: contestant\r\n            })\r\n        } else {\r\n            contestant.players.forEach(player => {\r\n                if (!is_object(player)) {\r\n                    all_errors.push({\r\n                        is_critical: false,\r\n                        message: 'Player should be an object, instead got: ',\r\n                        data: player\r\n                    })\r\n                }\r\n    \r\n                if (typeof player.title !== 'string') {\r\n                    all_errors.push({\r\n                        is_critical: false,\r\n                        message: 'Player must have a title, and it must be a string, instead got: ',\r\n                        data: player\r\n                    })\r\n                }\r\n    \r\n                if (typeof player.nationality_code !== 'undefined' && typeof player.nationality_code !== 'string') {\r\n                    all_errors.push({\r\n                        is_critical: false,\r\n                        message: 'If nationality_code is provided for a player, it must be a string: ',\r\n                        data: player\r\n                    })\r\n                }\r\n    \r\n                if (typeof player.flag_url !== 'undefined' && typeof player.flag_url !== 'string') {\r\n                    all_errors.push({\r\n                        is_critical: false,\r\n                        message: 'If flag_url is provided for a player, it must be a string: ',\r\n                        data: player\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return all_errors\r\n}\r\n","import { get_options_flattened_meta } from './options_meta_getter.mjs'\r\nimport { deep_clone_object } from '../utils/utils.mjs'\r\nimport { shout_impossible_option_value } from './validate_user_options.mjs'\r\nimport { is_object } from '../utils/utils.mjs'\r\n\r\n\r\nconst _get_final_value = (name, user_options, flattened_meta) => {\r\n    const option_meta = flattened_meta[name]\r\n    if (!option_meta) {\r\n        console.warn('options.get_final_value called with a non-existent option name: ', name)\r\n        return\r\n    }\r\n\r\n    let result = option_meta.default_value\r\n\r\n    const user_value = user_options[name]\r\n\r\n    if (user_value !== undefined) {\r\n        switch(option_meta.type) {\r\n\r\n            case 'number': {\r\n                if (typeof user_value === 'number') {\r\n                    result = user_value\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }\r\n                break\r\n            }\r\n\r\n            case 'pixels': {\r\n                if (typeof user_value === 'number') {\r\n                    result = user_value\r\n                    if (typeof option_meta.min_value === 'number') {\r\n                        result = Math.max(result, option_meta.min_value)\r\n                    }\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }\r\n                break\r\n            }\r\n\r\n\r\n            case 'multiline_string':\r\n            case 'string': {\r\n                if (typeof user_value === 'string') {\r\n                    result = user_value\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }\r\n                break\r\n            }\r\n\r\n\r\n            case 'function_or_null': {\r\n                if (typeof user_value === 'function' || user_value === null) {\r\n                    result = user_value\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }                    \r\n                break\r\n            }\r\n    \r\n\r\n            case 'boolean': {\r\n                if (typeof user_value === 'boolean') {\r\n                    result = user_value\r\n                } else if (user_value === 'false') {\r\n                    result = false\r\n                } else if (user_value === 'true') {\r\n                    result = true\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }\r\n                break\r\n            }\r\n            \r\n\r\n            case 'select': {\r\n                if (option_meta.options.find(o => is_object(o) ? (o.value === user_value) : (o === user_value))) {\r\n                    result = user_value\r\n                } else {\r\n                    shout_impossible_option_value(name, user_value)\r\n                }\r\n                break\r\n            }\r\n        }\r\n    }\r\n/* \r\n    if (\r\n        option_meta.type === 'pixels'\r\n        && _get_final_value('applyDevicePixelRatio', user_options, flattened_meta, is_mobile)\r\n        && is_mobile\r\n    ) {\r\n        result *= devicePixelRatio\r\n    } */\r\n\r\n    return result\r\n}\r\n\r\n\r\n\r\n\r\nexport const create_options_dealer = () => {\r\n    let user_options = {}\r\n    const flattened_meta = get_options_flattened_meta()\r\n\r\n    return {\r\n        update_user_options: (new_user_options) => {\r\n            user_options = { ...user_options, ...deep_clone_object(new_user_options) }\r\n        },\r\n\r\n        get_final_value: (name) => _get_final_value(name, user_options, flattened_meta),\r\n        \r\n        get_user_options: () => user_options\r\n    }\r\n}","import { within_range } from '../utils/utils.mjs'\r\nimport { get_elements } from '../stable_elements/create_stable_elements.mjs'\r\nimport { update_scrollbar } from '../stable_elements/scrollbar.mjs'\r\n\r\nconst update_buttons = (els, base_index) => {\r\n    let left_is_active = base_index > 0\r\n    let right_is_active = els.matches_positioner.lastChild.classList.contains('hidden')\r\n\r\n    els.the_root_element.querySelectorAll('.navigation-button.left')\r\n        .forEach(b => b.classList[left_is_active ? 'add' : 'remove']('active'))\r\n    els.the_root_element.querySelectorAll('.navigation-button.right')\r\n        .forEach(b => b.classList[right_is_active ? 'add' : 'remove']('active'))\r\n}\r\n\r\n\r\nexport const handle_new_left = (round_natural_width, els, base_index, get_option) => {\r\n    const rounds = [...els.matches_positioner.querySelectorAll('.round-wrapper')]\r\n    const round_titles = [...els.round_titles_wrapper.children]\r\n\r\n    const visible_rounds_count = get_option('visibleRoundsCount') || Math.max(\r\n        1,\r\n        Math.floor(els.content_area.clientWidth / round_natural_width)\r\n    )\r\n\r\n// remember scrollY ratio\r\n    let scrollY_middle_ratio = 0\r\n    const scrollY_middle_px = els.matches_vertical_scroller.scrollTop + els.matches_vertical_scroller.clientHeight / 2\r\n    scrollY_middle_ratio = scrollY_middle_px / els.matches_vertical_scroller.scrollHeight\r\n\r\n// hide side rounds\r\n    rounds.forEach((r, i) => {\r\n        const visible = i >= base_index && i <= base_index + visible_rounds_count - 1\r\n        r.classList[visible ? 'remove' : 'add']('hidden')\r\n        round_titles[i].classList[visible ? 'remove' : 'add']('hidden')\r\n    })\r\n\r\n// set 'mobile' layout if only 1 round visible\r\n    els.the_root_element.classList[visible_rounds_count === 1 ? 'add' : 'remove']('mobile')\r\n\r\n// adjust scroll position to keep the same matches in the middle\r\n    const new_scroll_middle_px = els.matches_vertical_scroller.scrollHeight * scrollY_middle_ratio\r\n    els.matches_vertical_scroller.scrollTop = within_range(\r\n        new_scroll_middle_px - els.matches_vertical_scroller.clientHeight / 2,\r\n        0,\r\n        els.matches_vertical_scroller.scrollHeight - els.matches_vertical_scroller.clientHeight\r\n    )\r\n\r\n    update_buttons(els, base_index)\r\n\r\n    update_scrollbar(els)\r\n}\r\n\r\n\r\n\r\n\r\nexport const create_navigation = (root_id, get_option) => {\r\n    const els = get_elements(root_id)\r\n    let base_index = 0\r\n    let round_natural_width = els.matches_positioner.firstElementChild.clientWidth\r\n\r\n\r\n    const repaint = () => handle_new_left(round_natural_width, els, base_index, get_option)\r\n\r\n    const apply_options = () => {\r\n        const was_mobile = els.the_root_element.classList.contains('mobile')\r\n        els.the_root_element.classList.remove('mobile')\r\n        els.the_root_element.classList.add('free-layout')\r\n        \r\n        round_natural_width = els.matches_positioner.firstElementChild.clientWidth\r\n\r\n        els.the_root_element.classList.remove('free-layout')\r\n        if (was_mobile) els.the_root_element.classList.add('mobile')\r\n        repaint()\r\n    }\r\n\r\n    apply_options()\r\n\r\n\r\n\r\n    const move_left = () => {\r\n        base_index = Math.max(0, base_index - 1)\r\n        repaint()\r\n    }\r\n    const move_right = () => {\r\n        if (!els.matches_positioner.lastChild.classList.contains('hidden')) {\r\n            return\r\n        }\r\n        base_index += 1\r\n        repaint()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        move_left,\r\n\r\n        move_right,\r\n\r\n        set_base_round_index: (i) => {\r\n            base_index = i\r\n            repaint()\r\n        },\r\n\r\n        apply_options,\r\n\r\n        repaint,\r\n\r\n        handle_click: (e) => {\r\n            if (!e.target.classList.contains('active')) return\r\n            if (e.target.classList.contains('left')) move_left()\r\n            if (e.target.classList.contains('right')) move_right()\r\n        },\r\n\r\n\r\n\r\n        get_state: () => {\r\n            const stable_elements = get_elements(root_id)\r\n            return {\r\n                reachedRightEdge: !stable_elements.matches_positioner.lastChild?.classList.contains('hidden'),\r\n                allRoundsAreVisible: stable_elements.matches_positioner.querySelector('.round-wrapper.hidden') === null,\r\n                baseRoundIndex: base_index\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","log_data_error","msg","data","console","error","JSON","stringify","handle_data_errors","errors","length","have_errors","have_critical_error","critical_error","find","err","is_critical","message","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","is_object","variable","Array","isArray","create_element_from_Html","htmlString","div","document","createElement","innerHTML","trim","firstElementChild","update_styles","root_id","styles_id","styles","current_styles_node","head","querySelector","removeChild","insertAdjacentHTML","insert_styles","deep_clone_object","temp","constructor","validate_matches","matches","contestants","undefined","push","forEach","match","match_id","round_id","order","sides","side","contestant_id","keys","includes","is_winner","score","single_set_score","main_score","tie_break","subscore","is_serving","get_default_round_title","rounds_count","round_index","Math","pow","get_elements","the_root_element","s","scrollbar","content_area","round_titles_wrapper","matches_vertical_scroller","matches_positioner","default_border_gray","BUTTONS_POSITIONS","overMatches","gutters","beforeTitles","overTitles","hidden","update_scrollbar","getComputedStyle","display","style","top","scrollTop","scrollHeight","height","clientHeight","content_is_higher","visibility","update_highlight","highlighted_contestant_id","querySelectorAll","m","classList","remove","getAttribute","add","reverse","install_mouse_events","all_data","get_option","stable_elements","navigation","drag_init_mouse_Y","drag_init_scrollTop","scrollbar_is_dragged","addEventListener","e","button","target","contains","handle_click","closest","contestant","clientY","window","limit","waiting","throttle","drag_distance_fraction","try_forget_window_scroll","overflowY","OPTIONS","GENERAL_OPTIONS","mainBorderColor","title","type","default_value","rootBackgroundColor","mainVerticalPadding","min_value","visibleRoundsCount","showScrollbar","scrollbarWidth","scrollbarColor","ROUND_TITLE_OPTIONS","roundTitlesHeight","roundTitlesBorderBottomColor","roundTitleColor","NAVIGATION_OPTIONS","navButtonsPosition","options","explanation","entries","map","pos_name","pos_title","join","navigationButtonsTopDistance","disable_if","navigationGutterBorderColor","defaultNavigationSvgSize","navigationSvgColor","leftNavigationButtonBackground","rightNavigationButtonBackground","leftNavigationButtonHTML","rightNavigationButtonHTML","FONTS_OPTIONS","rootFontFamily","roundTitlesFontFamily","roundTitlesFontSize","matchTextColor","matchFontSize","playerTitleFontFamily","highlightedPlayerTitleColor","scoreFontFamily","CONNECTION_LINES_OPTIONS","connectionLinesWidth","connectionLinesColor","highlightedConnectionLinesColor","MATCH_OPTIONS","matchMaxWidth","matchMinVerticalGap","matchHorMargin","matchAxisMargin","oneSidePlayersGap","liveMatchBorderColor","liveMatchBackgroundColor","distanceBetweenScorePairs","CALLBACKS","onMatchClick","onMatchSideClick","get_options_flattened_meta","flattened","values","options_of_kind","assign","did_shout","shout_impossible_option_value","option_name","option_value","requestAnimationFrame","warn","default_options","get_default_options","failed_img_srcs","on_image_err","this","src","removeEventListener","on_image_load","get_side_content","other_side","content","have_entry_statuses","entry_status","players","pl","player","have_nationalities","nationality_code","flag_url","maybe_get_nationality","get_player_el","sc","i","get_side_el","get_match_element","match_data","status_html","match_status","is_live","create_matches","els","round_elements","rounds","round","match_count","round_el","n","cb","_","match_index","from","image","add_flags_listeners","get_round_element","id","append","apply_new_options","new_options","options_dealer","user_options","all_options_meta","validate_user_options","update_user_options","b","get_final_value","get_general_styles","buttons_are_gutters","buttons_are_before_titles","buttons_are_over_titles","buttons_are_hidden","parseInt","get_buttons_styles","floor","get_rounds_styles","get_mobile_styles","try_merge_new_data","new_data","old_data","user_data","all_errors","name","matches_errors","ananlyze_data","p","get_permanent_drawing_props","createPlayoffs","user_wrapper_el","flattened_meta","new_user_options","option_meta","result","user_value","max","_get_final_value","get_user_options","create_options_dealer","random","toString","slice","moveToPreviousRound","moveToNextRound","getNavigationState","applyNewOptions","applyMatchesUpdates","content_area_html","r","create_stable_elements","base_index","round_natural_width","clientWidth","repaint","round_titles","children","visible_rounds_count","scrollY_middle_ratio","visible","new_scroll_middle_px","number","min","left_is_active","right_is_active","lastChild","update_buttons","handle_new_left","apply_options","was_mobile","move_left","move_right","set_base_round_index","get_state","reachedRightEdge","allRoundsAreVisible","baseRoundIndex","create_navigation","el","was_resized","ResizeObserver","observe","observe_resize_later","setBaseRoundIndex","applyFullDataUpdate","scroll_top","matches_data","replaceWith","m_i","findIndex","old_match","getAllData","getUserOptions"],"sourceRoot":""}