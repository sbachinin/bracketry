.playoffs-root {

    .navigation-button,
    .vertical-scroll-button {
        justify-content: center;
        align-items: center;

        border-width: 1px;
        border-style: solid;
        border-color: transparent;

        cursor: auto;
        pointer-events: none;
        user-select: none;

        z-index: 3;

        &.active {
            cursor: pointer;
            pointer-events: auto;

            &>* {
                opacity: 0.65;
            }

            &:hover>* {
                opacity: 1;
            }
        }

        &.hidden {
            display: none;
        }

        &>* {
            transition: opacity ease-in-out 0.2s;
            opacity: 0.15;
            pointer-events: none;
        }
    }



    .buttons-header {
        align-items: center;
        justify-content: space-between;
        position: static;
        height: auto;
        border-width: 1px;
        border-style: solid;
        border-color: transparent;
        border-bottom-color: var(--navigationGutterBorderColor, var(--rootBorderColor));
        display: none;

        .navigation-button {
            display: flex;
        }

        &.hidden {
            display: none !important;
        }
    }


    .navigation-button {
        max-height: 100%;

        &.non-header-button {
            position: absolute;
            transform: translate(0, -50%);
            top: var(--navButtonsTopDistance);
            display: none;

            &.left {
                left: 0;
            }

            &.right {
                right: 0;
            }
        }

        svg {
            fill: var(--navButtonSvgColor);
        }
    }


    .default-nav-icon,
    .default-scroll-icon {
        display: flex;

        svg {
            box-sizing: content-box;
        }
    }


    .default-nav-icon svg {
        padding: calc(var(--defaultNavigationIconSize) / 15);
        width: var(--defaultNavigationIconSize);
        height: var(--defaultNavigationIconSize);
    }

    .default-scroll-icon svg {
        padding: calc(var(--defaultScrollIconSize) / 15);
        width: var(--defaultScrollIconSize);
        height: var(--defaultScrollIconSize);
    }


    .vertical-scroll-button {
        display: none;

        &.button-up {
            border-bottom-color: var(--scrollGutterBorderColor, var(--rootBorderColor));
        }

        &.button-down {
            border-top-color: var(--scrollGutterBorderColor, var(--rootBorderColor));
        }

        svg {
            fill: var(--scrollButtonSvgColor);
        }
    }















    /* FEATURE STYLES */

    &.with-scroll-buttons-over-matches {
        .vertical-scroll-button {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            border-color: transparent;

            &.button-up {
                top: var(--roundTitlesHeight);
            }

            &.button-down {
                bottom: 0;
            }
        }
    }

    &.fullscreen,
    &.with-vertical-scroll-buttons {
        .vertical-scroll-button {
            display: flex;
        }

        .scrollbar {
            transition: top 0.2s ease-out, height 0.2s ease-out;
        }
    }




    &.with-nav-buttons-before-titles {
        .buttons-header {
            display: flex;
        }
    }

    &.with-nav-buttons-over-titles {
        .buttons-header {
            display: flex;
            position: absolute;
            z-index: 1;
            left: 0px;
            right: 0px;
            height: calc(var(--roundTitlesHeight) + 1px);
            border-color: transparent;
        }
    }

    &.with-hidden-nav-buttons {
        .navigation-button {
            display: none !important;
        }
    }

    &.with-gutter-nav-buttons {
        .navigation-button.non-header-button {
            position: static;
            transform: none;
            min-height: 100%;

            &:not(.hidden) {
                display: flex;
            }

            &.left {
                border-right-color: var(--navigationGutterBorderColor, var(--rootBorderColor));
            }

            &.right {
                border-left-color: var(--navigationGutterBorderColor, var(--rootBorderColor));
            }
        }
    }

    &.with-nav-buttons-over_matches {
        .navigation-button.non-header-button {
            &:not(.hidden) {
                display: flex;
            }
        }
    }
}