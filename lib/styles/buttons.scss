.playoffs-root {

    .navigation-button,
    .vertical-scroll-button {
        display: flex;
        justify-content: center;
        align-items: center;

        border-width: 1px;
        border-style: solid;
        border-color: transparent;

        cursor: auto;
        user-select: none;

        z-index: 3;

        &.active {
            cursor: pointer;

            &>* {
                opacity: 0.65;
            }

            &:hover>* {
                opacity: 1;
            }
        }

        &.hidden {
            display: none;
        }

        &>* {
            transition: opacity ease-in-out 0.2s;
            opacity: 0.15;
        }
    }



    .navigation-button {
        &.left {
            grid-column: 1;
        }

        &.right {
            grid-column: 5;
        }

        /* this wrapper is to move the icon vertically according to navButtonsTopDistance (using 'top' style) */
        /* applying this style to an 'icon' isn't reliable because there can be a custom content not wrapped in html tag */
        .button-icon-wrapper {
            width: max-content;
            display: flex;
            align-items: center;
            padding: var(--navButtonPadding, 0);
        }

        svg {
            fill: var(--navButtonSvgColor);
        }

    }


    .default-nav-icon,
    .default-scroll-icon {
        display: flex;

        svg {
            box-sizing: content-box;
        }
    }


    .default-nav-icon svg {
        width: var(--defaultNavigationIconSize);
        height: var(--defaultNavigationIconSize);
    }

    .default-scroll-icon svg {
        width: var(--defaultScrollIconSize);
        height: var(--defaultScrollIconSize);
    }


    .vertical-scroll-button {

        padding: var(--scrollButtonPadding, 0);
        grid-column: 2/span 2;
        display: none;

        &.button-up {
            grid-row: 3;
            border-bottom-color: var(--scrollGutterBorderColor, var(--rootBorderColor));
        }

        &.button-down {
            grid-row: 5;
            border-top-color: var(--scrollGutterBorderColor, var(--rootBorderColor));
        }

        svg {
            fill: var(--scrollButtonSvgColor);
        }
    }















    /* FEATURE STYLES */

    &.with-scroll-buttons-over-matches {
        .vertical-scroll-button {
            border: none;
            height: 0;
        }

        .button-up {
            align-items: flex-start;
        }

        .button-down {
            align-items: flex-end;
        }
    }

    &.fullscreen,
    &.with-vertical-scroll-buttons {
        .vertical-scroll-button {
            display: flex;
        }

        .scrollbar.animated {
            transition: top 0.2s ease-out, height 0.2s ease-out;
        }
    }




    &.with-nav-buttons-before-titles {
        .navigation-button {
            border-bottom: 1px solid var(--roundTitlesBorderColor, var(--rootBorderColor));

            &.left {
                grid-column: 2;
                justify-content: flex-start;
            }

            &.right {
                grid-column: 3;
                justify-content: flex-end;
            }
        }
    }

    &.with-nav-buttons-over-titles {
        .navigation-button {
            grid-row: 2;
            width: 0;
            border: none;
            position: relative;

            &.left {
                justify-content: flex-start;
            }

            &.right {
                justify-content: flex-end;
            }
        }
    }

    &.with-hidden-nav-buttons {
        .navigation-button {
            display: none !important;
        }
    }

    &.with-gutter-nav-buttons {
        .navigation-button {
            grid-row: 1/-1;

            &:not(.hidden) {
                min-height: 100%;
            }

            &.left {
                border-right-color: var(--navigationGutterBorderColor, var(--rootBorderColor));
            }

            &.right {
                border-left-color: var(--navigationGutterBorderColor, var(--rootBorderColor));
            }
        }
    }

    &.with-nav-buttons-over_matches {
        .navigation-button {
            &:not(.hidden) {
                display: flex;
                border: none;
                width: 0;
                position: relative;
                grid-row: 4;

                .button-icon-wrapper {
                    position: absolute;
                    cursor: pointer;
                    top: var(--navButtonsTopDistance, 50%);
                    transform: translate(0, -50%);
                }

                &.left .button-icon-wrapper {
                    left: 0;
                }

                &.right .button-icon-wrapper {
                    right: 0;
                }
            }
        }
    }
}